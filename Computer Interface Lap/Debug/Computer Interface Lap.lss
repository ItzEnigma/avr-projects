
Computer Interface Lap.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000dec  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000062  00800060  00000dec  00000e80  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000002d  008000c2  008000c2  00000ee2  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000ee2  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000f14  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000002e0  00000000  00000000  00000f50  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001f3c  00000000  00000000  00001230  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000f9b  00000000  00000000  0000316c  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001197  00000000  00000000  00004107  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000008e0  00000000  00000000  000052a0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000c18  00000000  00000000  00005b80  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001634  00000000  00000000  00006798  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000288  00000000  00000000  00007dcc  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 0b 02 	jmp	0x416	; 0x416 <__vector_1>
   8:	0c 94 32 02 	jmp	0x464	; 0x464 <__vector_2>
   c:	0c 94 59 02 	jmp	0x4b2	; 0x4b2 <__vector_3>
  10:	0c 94 8e 03 	jmp	0x71c	; 0x71c <__vector_4>
  14:	0c 94 cc 03 	jmp	0x798	; 0x798 <__vector_5>
  18:	0c 94 0b 04 	jmp	0x816	; 0x816 <__vector_6>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 32 04 	jmp	0x864	; 0x864 <__vector_9>
  28:	0c 94 11 03 	jmp	0x622	; 0x622 <__vector_10>
  2c:	0c 94 4f 03 	jmp	0x69e	; 0x69e <__vector_11>
  30:	0c 94 84 02 	jmp	0x508	; 0x508 <__vector_12>
  34:	0c 94 82 04 	jmp	0x904	; 0x904 <__vector_13>
  38:	0c 94 aa 04 	jmp	0x954	; 0x954 <__vector_14>
  3c:	0c 94 b9 04 	jmp	0x972	; 0x972 <__vector_15>
  40:	0c 94 70 01 	jmp	0x2e0	; 0x2e0 <__vector_16>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	ec ee       	ldi	r30, 0xEC	; 236
  68:	fd e0       	ldi	r31, 0x0D	; 13
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a2 3c       	cpi	r26, 0xC2	; 194
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	20 e0       	ldi	r18, 0x00	; 0
  78:	a2 ec       	ldi	r26, 0xC2	; 194
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	af 3e       	cpi	r26, 0xEF	; 239
  82:	b2 07       	cpc	r27, r18
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 49 00 	call	0x92	; 0x92 <main>
  8a:	0c 94 f4 06 	jmp	0xde8	; 0xde8 <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <main>:
#include "WaveGen/WaveGen_int.h"


int main(void)
{
    WaveGen_vInit();
  92:	0e 94 6c 00 	call	0xd8	; 0xd8 <WaveGen_vInit>
    while (1) 
    {
		WaveGen_vUpdate();
  96:	0e 94 8c 00 	call	0x118	; 0x118 <WaveGen_vUpdate>
  9a:	fd cf       	rjmp	.-6      	; 0x96 <main+0x4>

0000009c <dataHandler>:

static void dataHandler(u8 A_u8Data){
	static u8 L_u8Index = 0;
	static u8 L_u8Flag = 0;
	
	if(A_u8Data == '$'){
  9c:	84 32       	cpi	r24, 0x24	; 36
  9e:	21 f4       	brne	.+8      	; 0xa8 <dataHandler+0xc>
		L_u8Flag = 0;
  a0:	10 92 c3 00 	sts	0x00C3, r1	; 0x8000c3 <L_u8Flag.1886>
		L_u8Index = 0;
  a4:	10 92 c2 00 	sts	0x00C2, r1	; 0x8000c2 <__data_end>
	}
	if(L_u8Flag){
  a8:	90 91 c3 00 	lds	r25, 0x00C3	; 0x8000c3 <L_u8Flag.1886>
  ac:	99 23       	and	r25, r25
  ae:	51 f0       	breq	.+20     	; 0xc4 <dataHandler+0x28>
		G_u8Buffer[L_u8Index++] = A_u8Data;
  b0:	e0 91 c2 00 	lds	r30, 0x00C2	; 0x8000c2 <__data_end>
  b4:	91 e0       	ldi	r25, 0x01	; 1
  b6:	9e 0f       	add	r25, r30
  b8:	90 93 c2 00 	sts	0x00C2, r25	; 0x8000c2 <__data_end>
  bc:	f0 e0       	ldi	r31, 0x00	; 0
  be:	e2 54       	subi	r30, 0x42	; 66
  c0:	ff 4f       	sbci	r31, 0xFF	; 255
  c2:	80 83       	st	Z, r24
	}
	if(A_u8Data == '#'){
  c4:	83 32       	cpi	r24, 0x23	; 35
  c6:	19 f4       	brne	.+6      	; 0xce <dataHandler+0x32>
		L_u8Flag = 1;
  c8:	81 e0       	ldi	r24, 0x01	; 1
  ca:	80 93 c3 00 	sts	0x00C3, r24	; 0x8000c3 <L_u8Flag.1886>
  ce:	08 95       	ret

000000d0 <stopWave>:
	u16 L_u8Freq = (u16)( 500.0 / (A_u8Freq * 1.0));
	my_delay_us(L_u8Freq);
}

static void stopWave(){
	DIO_vSetPortVal(WAVEGEN_PORT, 0x00);
  d0:	60 e0       	ldi	r22, 0x00	; 0
  d2:	81 e0       	ldi	r24, 0x01	; 1
  d4:	0c 94 fb 01 	jmp	0x3f6	; 0x3f6 <DIO_vSetPortVal>

000000d8 <WaveGen_vInit>:
	
unsigned int sine_value[47] = {127,143,159,174,188,202,214,225,234,242,248,254,248,242,234,225,214,202,188,
								174,159,143,127,111,95,80,66,52,40,29,20,12,6,2,0,2,6,12,20,29,40,52,66,80,95,111,128};
	
void WaveGen_vInit(){
	UART_vInit();
  d8:	0e 94 59 04 	call	0x8b2	; 0x8b2 <UART_vInit>
	GIE_vSetGlobalInterrupt();
  dc:	0e 94 80 02 	call	0x500	; 0x500 <GIE_vSetGlobalInterrupt>
	TIMER_vInit(TIMER2);
  e0:	82 e0       	ldi	r24, 0x02	; 2
  e2:	0e 94 ac 02 	call	0x558	; 0x558 <TIMER_vInit>
	TIMER_vPWMSignal(TIMER2, 20);
  e6:	40 e0       	ldi	r20, 0x00	; 0
  e8:	50 e0       	ldi	r21, 0x00	; 0
  ea:	60 ea       	ldi	r22, 0xA0	; 160
  ec:	71 e4       	ldi	r23, 0x41	; 65
  ee:	82 e0       	ldi	r24, 0x02	; 2
  f0:	0e 94 cd 02 	call	0x59a	; 0x59a <TIMER_vPWMSignal>
	UART_u8GetDataAsync(dataHandler);
  f4:	8e e4       	ldi	r24, 0x4E	; 78
  f6:	90 e0       	ldi	r25, 0x00	; 0
  f8:	0e 94 75 04 	call	0x8ea	; 0x8ea <UART_u8GetDataAsync>
	DIO_vSetPortDir(WAVEGEN_PORT, 0xFF);
  fc:	6f ef       	ldi	r22, 0xFF	; 255
  fe:	81 e0       	ldi	r24, 0x01	; 1
 100:	0c 94 eb 01 	jmp	0x3d6	; 0x3d6 <DIO_vSetPortDir>

00000104 <my_delay_us>:
	} 
}

void my_delay_us(int us)
{
	while (0 < us)
 104:	18 16       	cp	r1, r24
 106:	19 06       	cpc	r1, r25
 108:	34 f4       	brge	.+12     	; 0x116 <my_delay_us+0x12>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 10a:	22 e0       	ldi	r18, 0x02	; 2
 10c:	2a 95       	dec	r18
 10e:	f1 f7       	brne	.-4      	; 0x10c <my_delay_us+0x8>
 110:	00 c0       	rjmp	.+0      	; 0x112 <my_delay_us+0xe>
	{
		_delay_us(1);
		--us;
 112:	01 97       	sbiw	r24, 0x01	; 1
 114:	f7 cf       	rjmp	.-18     	; 0x104 <my_delay_us>
	}
 116:	08 95       	ret

00000118 <WaveGen_vUpdate>:
}

/*Max freq 0-255 KHZ*/
/* # WAVE_ID FREQ	AMP $ */

void WaveGen_vUpdate(){
 118:	cf 92       	push	r12
 11a:	df 92       	push	r13
 11c:	ef 92       	push	r14
 11e:	ff 92       	push	r15
 120:	0f 93       	push	r16
 122:	1f 93       	push	r17
 124:	cf 93       	push	r28
 126:	df 93       	push	r29

	switch(G_u8Buffer[0] - '0'){
 128:	80 91 be 00 	lds	r24, 0x00BE	; 0x8000be <G_u8Buffer>
 12c:	90 e0       	ldi	r25, 0x00	; 0
 12e:	c0 97       	sbiw	r24, 0x30	; 48
 130:	81 30       	cpi	r24, 0x01	; 1
 132:	91 05       	cpc	r25, r1
 134:	71 f1       	breq	.+92     	; 0x192 <WaveGen_vUpdate+0x7a>
 136:	34 f4       	brge	.+12     	; 0x144 <WaveGen_vUpdate+0x2c>
 138:	89 2b       	or	r24, r25
 13a:	09 f0       	breq	.+2      	; 0x13e <WaveGen_vUpdate+0x26>
 13c:	b8 c0       	rjmp	.+368    	; 0x2ae <WaveGen_vUpdate+0x196>
 13e:	c0 e6       	ldi	r28, 0x60	; 96
 140:	d0 e0       	ldi	r29, 0x00	; 0
 142:	17 c0       	rjmp	.+46     	; 0x172 <WaveGen_vUpdate+0x5a>
 144:	60 91 c0 00 	lds	r22, 0x00C0	; 0x8000c0 <G_u8Buffer+0x2>
 148:	d0 90 bf 00 	lds	r13, 0x00BF	; 0x8000bf <G_u8Buffer+0x1>
 14c:	82 30       	cpi	r24, 0x02	; 2
 14e:	91 05       	cpc	r25, r1
 150:	09 f4       	brne	.+2      	; 0x154 <WaveGen_vUpdate+0x3c>
 152:	4b c0       	rjmp	.+150    	; 0x1ea <WaveGen_vUpdate+0xd2>
 154:	03 97       	sbiw	r24, 0x03	; 3
 156:	09 f0       	breq	.+2      	; 0x15a <WaveGen_vUpdate+0x42>
 158:	aa c0       	rjmp	.+340    	; 0x2ae <WaveGen_vUpdate+0x196>
	my_delay_us(L_u8Freq);
}

/* In stair case, we use Steps rather than Amplitude */
static void displayStaircaseWave(u8 A_u8Freq, u8 A_u8Amp){
	u8 step_value = (255/A_u8Amp);
 15a:	c6 2f       	mov	r28, r22
 15c:	d0 e0       	ldi	r29, 0x00	; 0
 15e:	8f ef       	ldi	r24, 0xFF	; 255
 160:	90 e0       	ldi	r25, 0x00	; 0
 162:	be 01       	movw	r22, r28
 164:	0e 94 cc 06 	call	0xd98	; 0xd98 <__divmodhi4>
 168:	e6 2e       	mov	r14, r22
 16a:	f1 2c       	mov	r15, r1
	for (int i=0 ; i<=A_u8Amp ; i++)
 16c:	00 e0       	ldi	r16, 0x00	; 0
 16e:	10 e0       	ldi	r17, 0x00	; 0
 170:	6f c0       	rjmp	.+222    	; 0x250 <WaveGen_vUpdate+0x138>
	DIO_vSetPortDir(WAVEGEN_PORT, 0xFF);
}

static void displaySineWave(u8 A_u8Freq, u8 A_u8Amp){
	for(u8 i=0; i<47; i++){
		DIO_vSetPortVal(WAVEGEN_PORT, sine_value[i]);
 172:	68 81       	ld	r22, Y
 174:	22 96       	adiw	r28, 0x02	; 2
 176:	81 e0       	ldi	r24, 0x01	; 1
 178:	0e 94 fb 01 	call	0x3f6	; 0x3f6 <DIO_vSetPortVal>
 17c:	89 e9       	ldi	r24, 0x99	; 153
 17e:	91 e0       	ldi	r25, 0x01	; 1
 180:	01 97       	sbiw	r24, 0x01	; 1
 182:	f1 f7       	brne	.-4      	; 0x180 <WaveGen_vUpdate+0x68>
 184:	00 c0       	rjmp	.+0      	; 0x186 <WaveGen_vUpdate+0x6e>
 186:	00 00       	nop
	UART_u8GetDataAsync(dataHandler);
	DIO_vSetPortDir(WAVEGEN_PORT, 0xFF);
}

static void displaySineWave(u8 A_u8Freq, u8 A_u8Amp){
	for(u8 i=0; i<47; i++){
 188:	90 e0       	ldi	r25, 0x00	; 0
 18a:	ce 3b       	cpi	r28, 0xBE	; 190
 18c:	d9 07       	cpc	r29, r25
 18e:	89 f7       	brne	.-30     	; 0x172 <WaveGen_vUpdate+0x5a>
 190:	9e c0       	rjmp	.+316    	; 0x2ce <WaveGen_vUpdate+0x1b6>
	DIO_vSetPortVal(WAVEGEN_PORT, u8MaxAmp);
	my_delay_us(L_u8Freq);
}

static void displayTriangleWave(u8 A_u8Freq, u8 A_u8Amp){
	u8 u8MaxAmp = (u8)((A_u8Amp*255.0)/12.0);
 192:	60 91 c0 00 	lds	r22, 0x00C0	; 0x8000c0 <G_u8Buffer+0x2>
 196:	70 e0       	ldi	r23, 0x00	; 0
 198:	80 e0       	ldi	r24, 0x00	; 0
 19a:	90 e0       	ldi	r25, 0x00	; 0
 19c:	0e 94 d3 05 	call	0xba6	; 0xba6 <__floatsisf>
 1a0:	20 e0       	ldi	r18, 0x00	; 0
 1a2:	30 e0       	ldi	r19, 0x00	; 0
 1a4:	4f e7       	ldi	r20, 0x7F	; 127
 1a6:	53 e4       	ldi	r21, 0x43	; 67
 1a8:	0e 94 5f 06 	call	0xcbe	; 0xcbe <__mulsf3>
 1ac:	20 e0       	ldi	r18, 0x00	; 0
 1ae:	30 e0       	ldi	r19, 0x00	; 0
 1b0:	40 e4       	ldi	r20, 0x40	; 64
 1b2:	51 e4       	ldi	r21, 0x41	; 65
 1b4:	0e 94 30 05 	call	0xa60	; 0xa60 <__divsf3>
 1b8:	0e 94 a2 05 	call	0xb44	; 0xb44 <__fixunssfsi>
 1bc:	c6 2f       	mov	r28, r22
	
	for(u8 i=0; i<=u8MaxAmp ; i++){
 1be:	d0 e0       	ldi	r29, 0x00	; 0
		DIO_vSetPortVal(WAVEGEN_PORT, i);
 1c0:	6d 2f       	mov	r22, r29
 1c2:	81 e0       	ldi	r24, 0x01	; 1
 1c4:	0e 94 fb 01 	call	0x3f6	; 0x3f6 <DIO_vSetPortVal>
 1c8:	82 e0       	ldi	r24, 0x02	; 2
 1ca:	8a 95       	dec	r24
 1cc:	f1 f7       	brne	.-4      	; 0x1ca <WaveGen_vUpdate+0xb2>
 1ce:	00 c0       	rjmp	.+0      	; 0x1d0 <WaveGen_vUpdate+0xb8>
}

static void displayTriangleWave(u8 A_u8Freq, u8 A_u8Amp){
	u8 u8MaxAmp = (u8)((A_u8Amp*255.0)/12.0);
	
	for(u8 i=0; i<=u8MaxAmp ; i++){
 1d0:	df 5f       	subi	r29, 0xFF	; 255
 1d2:	cd 17       	cp	r28, r29
 1d4:	a8 f7       	brcc	.-22     	; 0x1c0 <WaveGen_vUpdate+0xa8>
		DIO_vSetPortVal(WAVEGEN_PORT, i);
		_delay_us(1);
	}
	for(u8 i=u8MaxAmp ; i>=0 ; i--){
		DIO_vSetPortVal(WAVEGEN_PORT, i);
 1d6:	6c 2f       	mov	r22, r28
 1d8:	81 e0       	ldi	r24, 0x01	; 1
 1da:	0e 94 fb 01 	call	0x3f6	; 0x3f6 <DIO_vSetPortVal>
 1de:	92 e0       	ldi	r25, 0x02	; 2
 1e0:	9a 95       	dec	r25
 1e2:	f1 f7       	brne	.-4      	; 0x1e0 <WaveGen_vUpdate+0xc8>
 1e4:	00 c0       	rjmp	.+0      	; 0x1e6 <WaveGen_vUpdate+0xce>
	
	for(u8 i=0; i<=u8MaxAmp ; i++){
		DIO_vSetPortVal(WAVEGEN_PORT, i);
		_delay_us(1);
	}
	for(u8 i=u8MaxAmp ; i>=0 ; i--){
 1e6:	c1 50       	subi	r28, 0x01	; 1
 1e8:	f6 cf       	rjmp	.-20     	; 0x1d6 <WaveGen_vUpdate+0xbe>
		DIO_vSetPortVal(WAVEGEN_PORT, sine_value[i]);
		 _delay_us(205);
	}
}
static void displaySquareWave(u8 A_u8Freq, u8 A_u8Amp){
	u8 u8MaxAmp = (u8)((A_u8Amp*255.0)/12.0);
 1ea:	70 e0       	ldi	r23, 0x00	; 0
 1ec:	80 e0       	ldi	r24, 0x00	; 0
 1ee:	90 e0       	ldi	r25, 0x00	; 0
 1f0:	0e 94 d3 05 	call	0xba6	; 0xba6 <__floatsisf>
 1f4:	20 e0       	ldi	r18, 0x00	; 0
 1f6:	30 e0       	ldi	r19, 0x00	; 0
 1f8:	4f e7       	ldi	r20, 0x7F	; 127
 1fa:	53 e4       	ldi	r21, 0x43	; 67
 1fc:	0e 94 5f 06 	call	0xcbe	; 0xcbe <__mulsf3>
 200:	20 e0       	ldi	r18, 0x00	; 0
 202:	30 e0       	ldi	r19, 0x00	; 0
 204:	40 e4       	ldi	r20, 0x40	; 64
 206:	51 e4       	ldi	r21, 0x41	; 65
 208:	0e 94 30 05 	call	0xa60	; 0xa60 <__divsf3>
 20c:	0e 94 a2 05 	call	0xb44	; 0xb44 <__fixunssfsi>
 210:	c6 2f       	mov	r28, r22
	u16 L_u8Freq = (u16)( 500.0 / (A_u8Freq * 1.0));
 212:	6d 2d       	mov	r22, r13
 214:	70 e0       	ldi	r23, 0x00	; 0
 216:	80 e0       	ldi	r24, 0x00	; 0
 218:	90 e0       	ldi	r25, 0x00	; 0
 21a:	0e 94 d3 05 	call	0xba6	; 0xba6 <__floatsisf>
 21e:	9b 01       	movw	r18, r22
 220:	ac 01       	movw	r20, r24
 222:	60 e0       	ldi	r22, 0x00	; 0
 224:	70 e0       	ldi	r23, 0x00	; 0
 226:	8a ef       	ldi	r24, 0xFA	; 250
 228:	93 e4       	ldi	r25, 0x43	; 67
 22a:	0e 94 30 05 	call	0xa60	; 0xa60 <__divsf3>
 22e:	0e 94 a2 05 	call	0xb44	; 0xb44 <__fixunssfsi>
 232:	6b 01       	movw	r12, r22
 234:	7c 01       	movw	r14, r24
	// u32 u32_signalFreq = A_u8Freq / 2;
	DIO_vSetPortVal(WAVEGEN_PORT, 0x00);
 236:	60 e0       	ldi	r22, 0x00	; 0
 238:	81 e0       	ldi	r24, 0x01	; 1
 23a:	0e 94 fb 01 	call	0x3f6	; 0x3f6 <DIO_vSetPortVal>
	my_delay_us(L_u8Freq);
 23e:	c6 01       	movw	r24, r12
 240:	0e 94 82 00 	call	0x104	; 0x104 <my_delay_us>
	DIO_vSetPortVal(WAVEGEN_PORT, u8MaxAmp);
 244:	6c 2f       	mov	r22, r28
 246:	81 e0       	ldi	r24, 0x01	; 1
 248:	0e 94 fb 01 	call	0x3f6	; 0x3f6 <DIO_vSetPortVal>
	my_delay_us(L_u8Freq);
 24c:	c6 01       	movw	r24, r12
 24e:	25 c0       	rjmp	.+74     	; 0x29a <WaveGen_vUpdate+0x182>
/* In stair case, we use Steps rather than Amplitude */
static void displayStaircaseWave(u8 A_u8Freq, u8 A_u8Amp){
	u8 step_value = (255/A_u8Amp);
	for (int i=0 ; i<=A_u8Amp ; i++)
	{
		DIO_vSetPortVal(WAVEGEN_PORT, i*step_value);
 250:	6f 2d       	mov	r22, r15
 252:	81 e0       	ldi	r24, 0x01	; 1
 254:	0e 94 fb 01 	call	0x3f6	; 0x3f6 <DIO_vSetPortVal>
 258:	87 ec       	ldi	r24, 0xC7	; 199
 25a:	90 e0       	ldi	r25, 0x00	; 0
 25c:	01 97       	sbiw	r24, 0x01	; 1
 25e:	f1 f7       	brne	.-4      	; 0x25c <WaveGen_vUpdate+0x144>
 260:	00 c0       	rjmp	.+0      	; 0x262 <WaveGen_vUpdate+0x14a>
 262:	00 00       	nop
}

/* In stair case, we use Steps rather than Amplitude */
static void displayStaircaseWave(u8 A_u8Freq, u8 A_u8Amp){
	u8 step_value = (255/A_u8Amp);
	for (int i=0 ; i<=A_u8Amp ; i++)
 264:	0f 5f       	subi	r16, 0xFF	; 255
 266:	1f 4f       	sbci	r17, 0xFF	; 255
 268:	fe 0c       	add	r15, r14
 26a:	c0 17       	cp	r28, r16
 26c:	d1 07       	cpc	r29, r17
 26e:	84 f7       	brge	.-32     	; 0x250 <WaveGen_vUpdate+0x138>
	{
		DIO_vSetPortVal(WAVEGEN_PORT, i*step_value);
		_delay_us(100);	
	}
	DIO_vSetPortVal(WAVEGEN_PORT, 0);
 270:	60 e0       	ldi	r22, 0x00	; 0
 272:	81 e0       	ldi	r24, 0x01	; 1
 274:	0e 94 fb 01 	call	0x3f6	; 0x3f6 <DIO_vSetPortVal>
	u16 L_u8Freq = (u16)( 500.0 / (A_u8Freq * 1.0));
	my_delay_us(L_u8Freq);
 278:	6d 2d       	mov	r22, r13
 27a:	70 e0       	ldi	r23, 0x00	; 0
 27c:	80 e0       	ldi	r24, 0x00	; 0
 27e:	90 e0       	ldi	r25, 0x00	; 0
 280:	0e 94 d3 05 	call	0xba6	; 0xba6 <__floatsisf>
 284:	9b 01       	movw	r18, r22
 286:	ac 01       	movw	r20, r24
 288:	60 e0       	ldi	r22, 0x00	; 0
 28a:	70 e0       	ldi	r23, 0x00	; 0
 28c:	8a ef       	ldi	r24, 0xFA	; 250
 28e:	93 e4       	ldi	r25, 0x43	; 67
 290:	0e 94 30 05 	call	0xa60	; 0xa60 <__divsf3>
 294:	0e 94 a2 05 	call	0xb44	; 0xb44 <__fixunssfsi>
 298:	cb 01       	movw	r24, r22
		case TRIANGEWAVE_ID:	displayTriangleWave(G_u8Buffer[1], G_u8Buffer[2]); break;
		case SQUAREWAVE_ID:		displaySquareWave(G_u8Buffer[1], G_u8Buffer[2]); break;
		case STAIRCASE_ID:		displayStaircaseWave(G_u8Buffer[1], G_u8Buffer[2]); break;
		default:				stopWave(G_u8Buffer[1], G_u8Buffer[2]); break;
	}
}
 29a:	df 91       	pop	r29
 29c:	cf 91       	pop	r28
 29e:	1f 91       	pop	r17
 2a0:	0f 91       	pop	r16
 2a2:	ff 90       	pop	r15
 2a4:	ef 90       	pop	r14
 2a6:	df 90       	pop	r13
 2a8:	cf 90       	pop	r12
		DIO_vSetPortVal(WAVEGEN_PORT, i*step_value);
		_delay_us(100);	
	}
	DIO_vSetPortVal(WAVEGEN_PORT, 0);
	u16 L_u8Freq = (u16)( 500.0 / (A_u8Freq * 1.0));
	my_delay_us(L_u8Freq);
 2aa:	0c 94 82 00 	jmp	0x104	; 0x104 <my_delay_us>
	switch(G_u8Buffer[0] - '0'){
		case SINEWAVE_ID:		displaySineWave(G_u8Buffer[1], G_u8Buffer[2]); break;
		case TRIANGEWAVE_ID:	displayTriangleWave(G_u8Buffer[1], G_u8Buffer[2]); break;
		case SQUAREWAVE_ID:		displaySquareWave(G_u8Buffer[1], G_u8Buffer[2]); break;
		case STAIRCASE_ID:		displayStaircaseWave(G_u8Buffer[1], G_u8Buffer[2]); break;
		default:				stopWave(G_u8Buffer[1], G_u8Buffer[2]); break;
 2ae:	60 91 c0 00 	lds	r22, 0x00C0	; 0x8000c0 <G_u8Buffer+0x2>
 2b2:	70 e0       	ldi	r23, 0x00	; 0
 2b4:	80 91 bf 00 	lds	r24, 0x00BF	; 0x8000bf <G_u8Buffer+0x1>
 2b8:	90 e0       	ldi	r25, 0x00	; 0
	}
}
 2ba:	df 91       	pop	r29
 2bc:	cf 91       	pop	r28
 2be:	1f 91       	pop	r17
 2c0:	0f 91       	pop	r16
 2c2:	ff 90       	pop	r15
 2c4:	ef 90       	pop	r14
 2c6:	df 90       	pop	r13
 2c8:	cf 90       	pop	r12
	switch(G_u8Buffer[0] - '0'){
		case SINEWAVE_ID:		displaySineWave(G_u8Buffer[1], G_u8Buffer[2]); break;
		case TRIANGEWAVE_ID:	displayTriangleWave(G_u8Buffer[1], G_u8Buffer[2]); break;
		case SQUAREWAVE_ID:		displaySquareWave(G_u8Buffer[1], G_u8Buffer[2]); break;
		case STAIRCASE_ID:		displayStaircaseWave(G_u8Buffer[1], G_u8Buffer[2]); break;
		default:				stopWave(G_u8Buffer[1], G_u8Buffer[2]); break;
 2ca:	0c 94 68 00 	jmp	0xd0	; 0xd0 <stopWave>
	}
}
 2ce:	df 91       	pop	r29
 2d0:	cf 91       	pop	r28
 2d2:	1f 91       	pop	r17
 2d4:	0f 91       	pop	r16
 2d6:	ff 90       	pop	r15
 2d8:	ef 90       	pop	r14
 2da:	df 90       	pop	r13
 2dc:	cf 90       	pop	r12
 2de:	08 95       	ret

000002e0 <__vector_16>:
 2e0:	1f 92       	push	r1
 2e2:	0f 92       	push	r0
 2e4:	0f b6       	in	r0, 0x3f	; 63
 2e6:	0f 92       	push	r0
 2e8:	11 24       	eor	r1, r1
 2ea:	2f 93       	push	r18
 2ec:	3f 93       	push	r19
 2ee:	4f 93       	push	r20
 2f0:	5f 93       	push	r21
 2f2:	6f 93       	push	r22
 2f4:	7f 93       	push	r23
 2f6:	8f 93       	push	r24
 2f8:	9f 93       	push	r25
 2fa:	af 93       	push	r26
 2fc:	bf 93       	push	r27
 2fe:	ef 93       	push	r30
 300:	ff 93       	push	r31
 302:	84 b1       	in	r24, 0x04	; 4
 304:	95 b1       	in	r25, 0x05	; 5
 306:	e0 91 db 00 	lds	r30, 0x00DB	; 0x8000db <G_vISRptr>
 30a:	f0 91 dc 00 	lds	r31, 0x00DC	; 0x8000dc <G_vISRptr+0x1>
 30e:	09 95       	icall
 310:	33 98       	cbi	0x06, 3	; 6
 312:	ff 91       	pop	r31
 314:	ef 91       	pop	r30
 316:	bf 91       	pop	r27
 318:	af 91       	pop	r26
 31a:	9f 91       	pop	r25
 31c:	8f 91       	pop	r24
 31e:	7f 91       	pop	r23
 320:	6f 91       	pop	r22
 322:	5f 91       	pop	r21
 324:	4f 91       	pop	r20
 326:	3f 91       	pop	r19
 328:	2f 91       	pop	r18
 32a:	0f 90       	pop	r0
 32c:	0f be       	out	0x3f, r0	; 63
 32e:	0f 90       	pop	r0
 330:	1f 90       	pop	r1
 332:	18 95       	reti

00000334 <DIO_vSetPinDir>:
 334:	24 2f       	mov	r18, r20
 336:	81 30       	cpi	r24, 0x01	; 1
 338:	c1 f0       	breq	.+48     	; 0x36a <DIO_vSetPinDir+0x36>
 33a:	28 f0       	brcs	.+10     	; 0x346 <DIO_vSetPinDir+0x12>
 33c:	82 30       	cpi	r24, 0x02	; 2
 33e:	39 f1       	breq	.+78     	; 0x38e <DIO_vSetPinDir+0x5a>
 340:	83 30       	cpi	r24, 0x03	; 3
 342:	b9 f1       	breq	.+110    	; 0x3b2 <DIO_vSetPinDir+0x7e>
 344:	08 95       	ret
 346:	41 e0       	ldi	r20, 0x01	; 1
 348:	50 e0       	ldi	r21, 0x00	; 0
 34a:	06 2e       	mov	r0, r22
 34c:	01 c0       	rjmp	.+2      	; 0x350 <DIO_vSetPinDir+0x1c>
 34e:	44 0f       	add	r20, r20
 350:	0a 94       	dec	r0
 352:	ea f7       	brpl	.-6      	; 0x34e <DIO_vSetPinDir+0x1a>
 354:	40 95       	com	r20
 356:	8a b3       	in	r24, 0x1a	; 26
 358:	84 23       	and	r24, r20
 35a:	42 2f       	mov	r20, r18
 35c:	01 c0       	rjmp	.+2      	; 0x360 <DIO_vSetPinDir+0x2c>
 35e:	44 0f       	add	r20, r20
 360:	6a 95       	dec	r22
 362:	ea f7       	brpl	.-6      	; 0x35e <DIO_vSetPinDir+0x2a>
 364:	48 2b       	or	r20, r24
 366:	4a bb       	out	0x1a, r20	; 26
 368:	08 95       	ret
 36a:	81 e0       	ldi	r24, 0x01	; 1
 36c:	90 e0       	ldi	r25, 0x00	; 0
 36e:	06 2e       	mov	r0, r22
 370:	01 c0       	rjmp	.+2      	; 0x374 <DIO_vSetPinDir+0x40>
 372:	88 0f       	add	r24, r24
 374:	0a 94       	dec	r0
 376:	ea f7       	brpl	.-6      	; 0x372 <DIO_vSetPinDir+0x3e>
 378:	80 95       	com	r24
 37a:	47 b3       	in	r20, 0x17	; 23
 37c:	84 23       	and	r24, r20
 37e:	42 2f       	mov	r20, r18
 380:	01 c0       	rjmp	.+2      	; 0x384 <DIO_vSetPinDir+0x50>
 382:	44 0f       	add	r20, r20
 384:	6a 95       	dec	r22
 386:	ea f7       	brpl	.-6      	; 0x382 <DIO_vSetPinDir+0x4e>
 388:	48 2b       	or	r20, r24
 38a:	47 bb       	out	0x17, r20	; 23
 38c:	08 95       	ret
 38e:	81 e0       	ldi	r24, 0x01	; 1
 390:	90 e0       	ldi	r25, 0x00	; 0
 392:	06 2e       	mov	r0, r22
 394:	01 c0       	rjmp	.+2      	; 0x398 <DIO_vSetPinDir+0x64>
 396:	88 0f       	add	r24, r24
 398:	0a 94       	dec	r0
 39a:	ea f7       	brpl	.-6      	; 0x396 <DIO_vSetPinDir+0x62>
 39c:	80 95       	com	r24
 39e:	44 b3       	in	r20, 0x14	; 20
 3a0:	84 23       	and	r24, r20
 3a2:	42 2f       	mov	r20, r18
 3a4:	01 c0       	rjmp	.+2      	; 0x3a8 <DIO_vSetPinDir+0x74>
 3a6:	44 0f       	add	r20, r20
 3a8:	6a 95       	dec	r22
 3aa:	ea f7       	brpl	.-6      	; 0x3a6 <DIO_vSetPinDir+0x72>
 3ac:	48 2b       	or	r20, r24
 3ae:	44 bb       	out	0x14, r20	; 20
 3b0:	08 95       	ret
 3b2:	81 e0       	ldi	r24, 0x01	; 1
 3b4:	90 e0       	ldi	r25, 0x00	; 0
 3b6:	06 2e       	mov	r0, r22
 3b8:	01 c0       	rjmp	.+2      	; 0x3bc <DIO_vSetPinDir+0x88>
 3ba:	88 0f       	add	r24, r24
 3bc:	0a 94       	dec	r0
 3be:	ea f7       	brpl	.-6      	; 0x3ba <DIO_vSetPinDir+0x86>
 3c0:	80 95       	com	r24
 3c2:	41 b3       	in	r20, 0x11	; 17
 3c4:	84 23       	and	r24, r20
 3c6:	42 2f       	mov	r20, r18
 3c8:	01 c0       	rjmp	.+2      	; 0x3cc <DIO_vSetPinDir+0x98>
 3ca:	44 0f       	add	r20, r20
 3cc:	6a 95       	dec	r22
 3ce:	ea f7       	brpl	.-6      	; 0x3ca <DIO_vSetPinDir+0x96>
 3d0:	48 2b       	or	r20, r24
 3d2:	41 bb       	out	0x11, r20	; 17
 3d4:	08 95       	ret

000003d6 <DIO_vSetPortDir>:
 3d6:	81 30       	cpi	r24, 0x01	; 1
 3d8:	41 f0       	breq	.+16     	; 0x3ea <DIO_vSetPortDir+0x14>
 3da:	28 f0       	brcs	.+10     	; 0x3e6 <DIO_vSetPortDir+0x10>
 3dc:	82 30       	cpi	r24, 0x02	; 2
 3de:	39 f0       	breq	.+14     	; 0x3ee <DIO_vSetPortDir+0x18>
 3e0:	83 30       	cpi	r24, 0x03	; 3
 3e2:	39 f0       	breq	.+14     	; 0x3f2 <DIO_vSetPortDir+0x1c>
 3e4:	08 95       	ret
 3e6:	6a bb       	out	0x1a, r22	; 26
 3e8:	08 95       	ret
 3ea:	67 bb       	out	0x17, r22	; 23
 3ec:	08 95       	ret
 3ee:	64 bb       	out	0x14, r22	; 20
 3f0:	08 95       	ret
 3f2:	61 bb       	out	0x11, r22	; 17
 3f4:	08 95       	ret

000003f6 <DIO_vSetPortVal>:
 3f6:	81 30       	cpi	r24, 0x01	; 1
 3f8:	41 f0       	breq	.+16     	; 0x40a <__EEPROM_REGION_LENGTH__+0xa>
 3fa:	28 f0       	brcs	.+10     	; 0x406 <__EEPROM_REGION_LENGTH__+0x6>
 3fc:	82 30       	cpi	r24, 0x02	; 2
 3fe:	39 f0       	breq	.+14     	; 0x40e <__EEPROM_REGION_LENGTH__+0xe>
 400:	83 30       	cpi	r24, 0x03	; 3
 402:	39 f0       	breq	.+14     	; 0x412 <__EEPROM_REGION_LENGTH__+0x12>
 404:	08 95       	ret
 406:	6b bb       	out	0x1b, r22	; 27
 408:	08 95       	ret
 40a:	68 bb       	out	0x18, r22	; 24
 40c:	08 95       	ret
 40e:	65 bb       	out	0x15, r22	; 21
 410:	08 95       	ret
 412:	62 bb       	out	0x12, r22	; 18
 414:	08 95       	ret

00000416 <__vector_1>:
 416:	1f 92       	push	r1
 418:	0f 92       	push	r0
 41a:	0f b6       	in	r0, 0x3f	; 63
 41c:	0f 92       	push	r0
 41e:	11 24       	eor	r1, r1
 420:	2f 93       	push	r18
 422:	3f 93       	push	r19
 424:	4f 93       	push	r20
 426:	5f 93       	push	r21
 428:	6f 93       	push	r22
 42a:	7f 93       	push	r23
 42c:	8f 93       	push	r24
 42e:	9f 93       	push	r25
 430:	af 93       	push	r26
 432:	bf 93       	push	r27
 434:	ef 93       	push	r30
 436:	ff 93       	push	r31
 438:	e0 91 c8 00 	lds	r30, 0x00C8	; 0x8000c8 <G_vISRptr0>
 43c:	f0 91 c9 00 	lds	r31, 0x00C9	; 0x8000c9 <G_vISRptr0+0x1>
 440:	09 95       	icall
 442:	ff 91       	pop	r31
 444:	ef 91       	pop	r30
 446:	bf 91       	pop	r27
 448:	af 91       	pop	r26
 44a:	9f 91       	pop	r25
 44c:	8f 91       	pop	r24
 44e:	7f 91       	pop	r23
 450:	6f 91       	pop	r22
 452:	5f 91       	pop	r21
 454:	4f 91       	pop	r20
 456:	3f 91       	pop	r19
 458:	2f 91       	pop	r18
 45a:	0f 90       	pop	r0
 45c:	0f be       	out	0x3f, r0	; 63
 45e:	0f 90       	pop	r0
 460:	1f 90       	pop	r1
 462:	18 95       	reti

00000464 <__vector_2>:
 464:	1f 92       	push	r1
 466:	0f 92       	push	r0
 468:	0f b6       	in	r0, 0x3f	; 63
 46a:	0f 92       	push	r0
 46c:	11 24       	eor	r1, r1
 46e:	2f 93       	push	r18
 470:	3f 93       	push	r19
 472:	4f 93       	push	r20
 474:	5f 93       	push	r21
 476:	6f 93       	push	r22
 478:	7f 93       	push	r23
 47a:	8f 93       	push	r24
 47c:	9f 93       	push	r25
 47e:	af 93       	push	r26
 480:	bf 93       	push	r27
 482:	ef 93       	push	r30
 484:	ff 93       	push	r31
 486:	e0 91 c6 00 	lds	r30, 0x00C6	; 0x8000c6 <G_vISRptr1>
 48a:	f0 91 c7 00 	lds	r31, 0x00C7	; 0x8000c7 <G_vISRptr1+0x1>
 48e:	09 95       	icall
 490:	ff 91       	pop	r31
 492:	ef 91       	pop	r30
 494:	bf 91       	pop	r27
 496:	af 91       	pop	r26
 498:	9f 91       	pop	r25
 49a:	8f 91       	pop	r24
 49c:	7f 91       	pop	r23
 49e:	6f 91       	pop	r22
 4a0:	5f 91       	pop	r21
 4a2:	4f 91       	pop	r20
 4a4:	3f 91       	pop	r19
 4a6:	2f 91       	pop	r18
 4a8:	0f 90       	pop	r0
 4aa:	0f be       	out	0x3f, r0	; 63
 4ac:	0f 90       	pop	r0
 4ae:	1f 90       	pop	r1
 4b0:	18 95       	reti

000004b2 <__vector_3>:
 4b2:	1f 92       	push	r1
 4b4:	0f 92       	push	r0
 4b6:	0f b6       	in	r0, 0x3f	; 63
 4b8:	0f 92       	push	r0
 4ba:	11 24       	eor	r1, r1
 4bc:	2f 93       	push	r18
 4be:	3f 93       	push	r19
 4c0:	4f 93       	push	r20
 4c2:	5f 93       	push	r21
 4c4:	6f 93       	push	r22
 4c6:	7f 93       	push	r23
 4c8:	8f 93       	push	r24
 4ca:	9f 93       	push	r25
 4cc:	af 93       	push	r26
 4ce:	bf 93       	push	r27
 4d0:	ef 93       	push	r30
 4d2:	ff 93       	push	r31
 4d4:	e0 91 c4 00 	lds	r30, 0x00C4	; 0x8000c4 <G_vISRptr2>
 4d8:	f0 91 c5 00 	lds	r31, 0x00C5	; 0x8000c5 <G_vISRptr2+0x1>
 4dc:	09 95       	icall
 4de:	ff 91       	pop	r31
 4e0:	ef 91       	pop	r30
 4e2:	bf 91       	pop	r27
 4e4:	af 91       	pop	r26
 4e6:	9f 91       	pop	r25
 4e8:	8f 91       	pop	r24
 4ea:	7f 91       	pop	r23
 4ec:	6f 91       	pop	r22
 4ee:	5f 91       	pop	r21
 4f0:	4f 91       	pop	r20
 4f2:	3f 91       	pop	r19
 4f4:	2f 91       	pop	r18
 4f6:	0f 90       	pop	r0
 4f8:	0f be       	out	0x3f, r0	; 63
 4fa:	0f 90       	pop	r0
 4fc:	1f 90       	pop	r1
 4fe:	18 95       	reti

00000500 <GIE_vSetGlobalInterrupt>:
 500:	8f b7       	in	r24, 0x3f	; 63
 502:	80 68       	ori	r24, 0x80	; 128
 504:	8f bf       	out	0x3f, r24	; 63
 506:	08 95       	ret

00000508 <__vector_12>:
 508:	1f 92       	push	r1
 50a:	0f 92       	push	r0
 50c:	0f b6       	in	r0, 0x3f	; 63
 50e:	0f 92       	push	r0
 510:	11 24       	eor	r1, r1
 512:	2f 93       	push	r18
 514:	3f 93       	push	r19
 516:	4f 93       	push	r20
 518:	5f 93       	push	r21
 51a:	6f 93       	push	r22
 51c:	7f 93       	push	r23
 51e:	8f 93       	push	r24
 520:	9f 93       	push	r25
 522:	af 93       	push	r26
 524:	bf 93       	push	r27
 526:	ef 93       	push	r30
 528:	ff 93       	push	r31
 52a:	8f b1       	in	r24, 0x0f	; 15
 52c:	e0 91 dd 00 	lds	r30, 0x00DD	; 0x8000dd <GLB_PTR_FUNC>
 530:	f0 91 de 00 	lds	r31, 0x00DE	; 0x8000de <GLB_PTR_FUNC+0x1>
 534:	09 95       	icall
 536:	ff 91       	pop	r31
 538:	ef 91       	pop	r30
 53a:	bf 91       	pop	r27
 53c:	af 91       	pop	r26
 53e:	9f 91       	pop	r25
 540:	8f 91       	pop	r24
 542:	7f 91       	pop	r23
 544:	6f 91       	pop	r22
 546:	5f 91       	pop	r21
 548:	4f 91       	pop	r20
 54a:	3f 91       	pop	r19
 54c:	2f 91       	pop	r18
 54e:	0f 90       	pop	r0
 550:	0f be       	out	0x3f, r0	; 63
 552:	0f 90       	pop	r0
 554:	1f 90       	pop	r1
 556:	18 95       	reti

00000558 <TIMER_vInit>:
 558:	81 30       	cpi	r24, 0x01	; 1
 55a:	71 f0       	breq	.+28     	; 0x578 <TIMER_vInit+0x20>
 55c:	18 f0       	brcs	.+6      	; 0x564 <TIMER_vInit+0xc>
 55e:	82 30       	cpi	r24, 0x02	; 2
 560:	31 f0       	breq	.+12     	; 0x56e <TIMER_vInit+0x16>
 562:	08 95       	ret
 564:	83 b7       	in	r24, 0x33	; 51
 566:	80 78       	andi	r24, 0x80	; 128
 568:	8a 67       	ori	r24, 0x7A	; 122
 56a:	83 bf       	out	0x33, r24	; 51
 56c:	08 95       	ret
 56e:	85 b5       	in	r24, 0x25	; 37
 570:	80 78       	andi	r24, 0x80	; 128
 572:	8f 66       	ori	r24, 0x6F	; 111
 574:	85 bd       	out	0x25, r24	; 37
 576:	08 95       	ret
 578:	8f b5       	in	r24, 0x2f	; 47
 57a:	8f 73       	andi	r24, 0x3F	; 63
 57c:	8f bd       	out	0x2f, r24	; 47
 57e:	8f b5       	in	r24, 0x2f	; 47
 580:	8f 7c       	andi	r24, 0xCF	; 207
 582:	8f bd       	out	0x2f, r24	; 47
 584:	8e b5       	in	r24, 0x2e	; 46
 586:	88 7f       	andi	r24, 0xF8	; 248
 588:	82 60       	ori	r24, 0x02	; 2
 58a:	8e bd       	out	0x2e, r24	; 46
 58c:	8f b5       	in	r24, 0x2f	; 47
 58e:	8c 7f       	andi	r24, 0xFC	; 252
 590:	8f bd       	out	0x2f, r24	; 47
 592:	8e b5       	in	r24, 0x2e	; 46
 594:	87 7e       	andi	r24, 0xE7	; 231
 596:	8e bd       	out	0x2e, r24	; 46
 598:	08 95       	ret

0000059a <TIMER_vPWMSignal>:
 59a:	cf 92       	push	r12
 59c:	df 92       	push	r13
 59e:	ef 92       	push	r14
 5a0:	ff 92       	push	r15
 5a2:	6a 01       	movw	r12, r20
 5a4:	7b 01       	movw	r14, r22
 5a6:	88 23       	and	r24, r24
 5a8:	c9 f0       	breq	.+50     	; 0x5dc <TIMER_vPWMSignal+0x42>
 5aa:	82 30       	cpi	r24, 0x02	; 2
 5ac:	a9 f5       	brne	.+106    	; 0x618 <TIMER_vPWMSignal+0x7e>
 5ae:	41 e0       	ldi	r20, 0x01	; 1
 5b0:	67 e0       	ldi	r22, 0x07	; 7
 5b2:	83 e0       	ldi	r24, 0x03	; 3
 5b4:	0e 94 9a 01 	call	0x334	; 0x334 <DIO_vSetPinDir>
 5b8:	20 e0       	ldi	r18, 0x00	; 0
 5ba:	30 e0       	ldi	r19, 0x00	; 0
 5bc:	48 ec       	ldi	r20, 0xC8	; 200
 5be:	52 e4       	ldi	r21, 0x42	; 66
 5c0:	c7 01       	movw	r24, r14
 5c2:	b6 01       	movw	r22, r12
 5c4:	0e 94 30 05 	call	0xa60	; 0xa60 <__divsf3>
 5c8:	20 e0       	ldi	r18, 0x00	; 0
 5ca:	30 e0       	ldi	r19, 0x00	; 0
 5cc:	4f e7       	ldi	r20, 0x7F	; 127
 5ce:	53 e4       	ldi	r21, 0x43	; 67
 5d0:	0e 94 5f 06 	call	0xcbe	; 0xcbe <__mulsf3>
 5d4:	0e 94 a2 05 	call	0xb44	; 0xb44 <__fixunssfsi>
 5d8:	63 bd       	out	0x23, r22	; 35
 5da:	1e c0       	rjmp	.+60     	; 0x618 <TIMER_vPWMSignal+0x7e>
 5dc:	41 e0       	ldi	r20, 0x01	; 1
 5de:	63 e0       	ldi	r22, 0x03	; 3
 5e0:	81 e0       	ldi	r24, 0x01	; 1
 5e2:	0e 94 9a 01 	call	0x334	; 0x334 <DIO_vSetPinDir>
 5e6:	20 e0       	ldi	r18, 0x00	; 0
 5e8:	30 e0       	ldi	r19, 0x00	; 0
 5ea:	48 ec       	ldi	r20, 0xC8	; 200
 5ec:	52 e4       	ldi	r21, 0x42	; 66
 5ee:	c7 01       	movw	r24, r14
 5f0:	b6 01       	movw	r22, r12
 5f2:	0e 94 30 05 	call	0xa60	; 0xa60 <__divsf3>
 5f6:	9b 01       	movw	r18, r22
 5f8:	ac 01       	movw	r20, r24
 5fa:	60 e0       	ldi	r22, 0x00	; 0
 5fc:	70 e0       	ldi	r23, 0x00	; 0
 5fe:	80 e8       	ldi	r24, 0x80	; 128
 600:	9f e3       	ldi	r25, 0x3F	; 63
 602:	0e 94 c3 04 	call	0x986	; 0x986 <__subsf3>
 606:	20 e0       	ldi	r18, 0x00	; 0
 608:	30 e0       	ldi	r19, 0x00	; 0
 60a:	4f e7       	ldi	r20, 0x7F	; 127
 60c:	53 e4       	ldi	r21, 0x43	; 67
 60e:	0e 94 5f 06 	call	0xcbe	; 0xcbe <__mulsf3>
 612:	0e 94 a2 05 	call	0xb44	; 0xb44 <__fixunssfsi>
 616:	6c bf       	out	0x3c, r22	; 60
 618:	ff 90       	pop	r15
 61a:	ef 90       	pop	r14
 61c:	df 90       	pop	r13
 61e:	cf 90       	pop	r12
 620:	08 95       	ret

00000622 <__vector_10>:
 622:	1f 92       	push	r1
 624:	0f 92       	push	r0
 626:	0f b6       	in	r0, 0x3f	; 63
 628:	0f 92       	push	r0
 62a:	11 24       	eor	r1, r1
 62c:	2f 93       	push	r18
 62e:	3f 93       	push	r19
 630:	4f 93       	push	r20
 632:	5f 93       	push	r21
 634:	6f 93       	push	r22
 636:	7f 93       	push	r23
 638:	8f 93       	push	r24
 63a:	9f 93       	push	r25
 63c:	af 93       	push	r26
 63e:	bf 93       	push	r27
 640:	ef 93       	push	r30
 642:	ff 93       	push	r31
 644:	80 91 d6 00 	lds	r24, 0x00D6	; 0x8000d6 <L_u32Counter.1755>
 648:	90 91 d7 00 	lds	r25, 0x00D7	; 0x8000d7 <L_u32Counter.1755+0x1>
 64c:	a0 91 d8 00 	lds	r26, 0x00D8	; 0x8000d8 <L_u32Counter.1755+0x2>
 650:	b0 91 d9 00 	lds	r27, 0x00D9	; 0x8000d9 <L_u32Counter.1755+0x3>
 654:	01 96       	adiw	r24, 0x01	; 1
 656:	a1 1d       	adc	r26, r1
 658:	b1 1d       	adc	r27, r1
 65a:	80 93 d6 00 	sts	0x00D6, r24	; 0x8000d6 <L_u32Counter.1755>
 65e:	90 93 d7 00 	sts	0x00D7, r25	; 0x8000d7 <L_u32Counter.1755+0x1>
 662:	a0 93 d8 00 	sts	0x00D8, r26	; 0x8000d8 <L_u32Counter.1755+0x2>
 666:	b0 93 d9 00 	sts	0x00D9, r27	; 0x8000d9 <L_u32Counter.1755+0x3>
 66a:	89 2b       	or	r24, r25
 66c:	8a 2b       	or	r24, r26
 66e:	8b 2b       	or	r24, r27
 670:	29 f4       	brne	.+10     	; 0x67c <__vector_10+0x5a>
 672:	e0 91 e5 00 	lds	r30, 0x00E5	; 0x8000e5 <GLB_PTRF_TIM0_CTC>
 676:	f0 91 e6 00 	lds	r31, 0x00E6	; 0x8000e6 <GLB_PTRF_TIM0_CTC+0x1>
 67a:	09 95       	icall
 67c:	ff 91       	pop	r31
 67e:	ef 91       	pop	r30
 680:	bf 91       	pop	r27
 682:	af 91       	pop	r26
 684:	9f 91       	pop	r25
 686:	8f 91       	pop	r24
 688:	7f 91       	pop	r23
 68a:	6f 91       	pop	r22
 68c:	5f 91       	pop	r21
 68e:	4f 91       	pop	r20
 690:	3f 91       	pop	r19
 692:	2f 91       	pop	r18
 694:	0f 90       	pop	r0
 696:	0f be       	out	0x3f, r0	; 63
 698:	0f 90       	pop	r0
 69a:	1f 90       	pop	r1
 69c:	18 95       	reti

0000069e <__vector_11>:
 69e:	1f 92       	push	r1
 6a0:	0f 92       	push	r0
 6a2:	0f b6       	in	r0, 0x3f	; 63
 6a4:	0f 92       	push	r0
 6a6:	11 24       	eor	r1, r1
 6a8:	2f 93       	push	r18
 6aa:	3f 93       	push	r19
 6ac:	4f 93       	push	r20
 6ae:	5f 93       	push	r21
 6b0:	6f 93       	push	r22
 6b2:	7f 93       	push	r23
 6b4:	8f 93       	push	r24
 6b6:	9f 93       	push	r25
 6b8:	af 93       	push	r26
 6ba:	bf 93       	push	r27
 6bc:	ef 93       	push	r30
 6be:	ff 93       	push	r31
 6c0:	80 91 d2 00 	lds	r24, 0x00D2	; 0x8000d2 <L_u32Counter.1759>
 6c4:	90 91 d3 00 	lds	r25, 0x00D3	; 0x8000d3 <L_u32Counter.1759+0x1>
 6c8:	a0 91 d4 00 	lds	r26, 0x00D4	; 0x8000d4 <L_u32Counter.1759+0x2>
 6cc:	b0 91 d5 00 	lds	r27, 0x00D5	; 0x8000d5 <L_u32Counter.1759+0x3>
 6d0:	01 96       	adiw	r24, 0x01	; 1
 6d2:	a1 1d       	adc	r26, r1
 6d4:	b1 1d       	adc	r27, r1
 6d6:	80 93 d2 00 	sts	0x00D2, r24	; 0x8000d2 <L_u32Counter.1759>
 6da:	90 93 d3 00 	sts	0x00D3, r25	; 0x8000d3 <L_u32Counter.1759+0x1>
 6de:	a0 93 d4 00 	sts	0x00D4, r26	; 0x8000d4 <L_u32Counter.1759+0x2>
 6e2:	b0 93 d5 00 	sts	0x00D5, r27	; 0x8000d5 <L_u32Counter.1759+0x3>
 6e6:	89 2b       	or	r24, r25
 6e8:	8a 2b       	or	r24, r26
 6ea:	8b 2b       	or	r24, r27
 6ec:	31 f4       	brne	.+12     	; 0x6fa <__vector_11+0x5c>
 6ee:	12 be       	out	0x32, r1	; 50
 6f0:	e0 91 df 00 	lds	r30, 0x00DF	; 0x8000df <GLB_PTRF_TIM0_OVF>
 6f4:	f0 91 e0 00 	lds	r31, 0x00E0	; 0x8000e0 <GLB_PTRF_TIM0_OVF+0x1>
 6f8:	09 95       	icall
 6fa:	ff 91       	pop	r31
 6fc:	ef 91       	pop	r30
 6fe:	bf 91       	pop	r27
 700:	af 91       	pop	r26
 702:	9f 91       	pop	r25
 704:	8f 91       	pop	r24
 706:	7f 91       	pop	r23
 708:	6f 91       	pop	r22
 70a:	5f 91       	pop	r21
 70c:	4f 91       	pop	r20
 70e:	3f 91       	pop	r19
 710:	2f 91       	pop	r18
 712:	0f 90       	pop	r0
 714:	0f be       	out	0x3f, r0	; 63
 716:	0f 90       	pop	r0
 718:	1f 90       	pop	r1
 71a:	18 95       	reti

0000071c <__vector_4>:
 71c:	1f 92       	push	r1
 71e:	0f 92       	push	r0
 720:	0f b6       	in	r0, 0x3f	; 63
 722:	0f 92       	push	r0
 724:	11 24       	eor	r1, r1
 726:	2f 93       	push	r18
 728:	3f 93       	push	r19
 72a:	4f 93       	push	r20
 72c:	5f 93       	push	r21
 72e:	6f 93       	push	r22
 730:	7f 93       	push	r23
 732:	8f 93       	push	r24
 734:	9f 93       	push	r25
 736:	af 93       	push	r26
 738:	bf 93       	push	r27
 73a:	ef 93       	push	r30
 73c:	ff 93       	push	r31
 73e:	80 91 ce 00 	lds	r24, 0x00CE	; 0x8000ce <L_u32Counter.1763>
 742:	90 91 cf 00 	lds	r25, 0x00CF	; 0x8000cf <L_u32Counter.1763+0x1>
 746:	a0 91 d0 00 	lds	r26, 0x00D0	; 0x8000d0 <L_u32Counter.1763+0x2>
 74a:	b0 91 d1 00 	lds	r27, 0x00D1	; 0x8000d1 <L_u32Counter.1763+0x3>
 74e:	01 96       	adiw	r24, 0x01	; 1
 750:	a1 1d       	adc	r26, r1
 752:	b1 1d       	adc	r27, r1
 754:	80 93 ce 00 	sts	0x00CE, r24	; 0x8000ce <L_u32Counter.1763>
 758:	90 93 cf 00 	sts	0x00CF, r25	; 0x8000cf <L_u32Counter.1763+0x1>
 75c:	a0 93 d0 00 	sts	0x00D0, r26	; 0x8000d0 <L_u32Counter.1763+0x2>
 760:	b0 93 d1 00 	sts	0x00D1, r27	; 0x8000d1 <L_u32Counter.1763+0x3>
 764:	89 2b       	or	r24, r25
 766:	8a 2b       	or	r24, r26
 768:	8b 2b       	or	r24, r27
 76a:	29 f4       	brne	.+10     	; 0x776 <__vector_4+0x5a>
 76c:	e0 91 e3 00 	lds	r30, 0x00E3	; 0x8000e3 <GLB_PTRF_TIM2_CTC>
 770:	f0 91 e4 00 	lds	r31, 0x00E4	; 0x8000e4 <GLB_PTRF_TIM2_CTC+0x1>
 774:	09 95       	icall
 776:	ff 91       	pop	r31
 778:	ef 91       	pop	r30
 77a:	bf 91       	pop	r27
 77c:	af 91       	pop	r26
 77e:	9f 91       	pop	r25
 780:	8f 91       	pop	r24
 782:	7f 91       	pop	r23
 784:	6f 91       	pop	r22
 786:	5f 91       	pop	r21
 788:	4f 91       	pop	r20
 78a:	3f 91       	pop	r19
 78c:	2f 91       	pop	r18
 78e:	0f 90       	pop	r0
 790:	0f be       	out	0x3f, r0	; 63
 792:	0f 90       	pop	r0
 794:	1f 90       	pop	r1
 796:	18 95       	reti

00000798 <__vector_5>:
 798:	1f 92       	push	r1
 79a:	0f 92       	push	r0
 79c:	0f b6       	in	r0, 0x3f	; 63
 79e:	0f 92       	push	r0
 7a0:	11 24       	eor	r1, r1
 7a2:	2f 93       	push	r18
 7a4:	3f 93       	push	r19
 7a6:	4f 93       	push	r20
 7a8:	5f 93       	push	r21
 7aa:	6f 93       	push	r22
 7ac:	7f 93       	push	r23
 7ae:	8f 93       	push	r24
 7b0:	9f 93       	push	r25
 7b2:	af 93       	push	r26
 7b4:	bf 93       	push	r27
 7b6:	ef 93       	push	r30
 7b8:	ff 93       	push	r31
 7ba:	80 91 ca 00 	lds	r24, 0x00CA	; 0x8000ca <L_u32Counter.1767>
 7be:	90 91 cb 00 	lds	r25, 0x00CB	; 0x8000cb <L_u32Counter.1767+0x1>
 7c2:	a0 91 cc 00 	lds	r26, 0x00CC	; 0x8000cc <L_u32Counter.1767+0x2>
 7c6:	b0 91 cd 00 	lds	r27, 0x00CD	; 0x8000cd <L_u32Counter.1767+0x3>
 7ca:	01 96       	adiw	r24, 0x01	; 1
 7cc:	a1 1d       	adc	r26, r1
 7ce:	b1 1d       	adc	r27, r1
 7d0:	80 93 ca 00 	sts	0x00CA, r24	; 0x8000ca <L_u32Counter.1767>
 7d4:	90 93 cb 00 	sts	0x00CB, r25	; 0x8000cb <L_u32Counter.1767+0x1>
 7d8:	a0 93 cc 00 	sts	0x00CC, r26	; 0x8000cc <L_u32Counter.1767+0x2>
 7dc:	b0 93 cd 00 	sts	0x00CD, r27	; 0x8000cd <L_u32Counter.1767+0x3>
 7e0:	89 2b       	or	r24, r25
 7e2:	8a 2b       	or	r24, r26
 7e4:	8b 2b       	or	r24, r27
 7e6:	31 f4       	brne	.+12     	; 0x7f4 <__vector_5+0x5c>
 7e8:	14 bc       	out	0x24, r1	; 36
 7ea:	e0 91 e7 00 	lds	r30, 0x00E7	; 0x8000e7 <GLB_PTRF_TIM2_OVF>
 7ee:	f0 91 e8 00 	lds	r31, 0x00E8	; 0x8000e8 <GLB_PTRF_TIM2_OVF+0x1>
 7f2:	09 95       	icall
 7f4:	ff 91       	pop	r31
 7f6:	ef 91       	pop	r30
 7f8:	bf 91       	pop	r27
 7fa:	af 91       	pop	r26
 7fc:	9f 91       	pop	r25
 7fe:	8f 91       	pop	r24
 800:	7f 91       	pop	r23
 802:	6f 91       	pop	r22
 804:	5f 91       	pop	r21
 806:	4f 91       	pop	r20
 808:	3f 91       	pop	r19
 80a:	2f 91       	pop	r18
 80c:	0f 90       	pop	r0
 80e:	0f be       	out	0x3f, r0	; 63
 810:	0f 90       	pop	r0
 812:	1f 90       	pop	r1
 814:	18 95       	reti

00000816 <__vector_6>:
 816:	1f 92       	push	r1
 818:	0f 92       	push	r0
 81a:	0f b6       	in	r0, 0x3f	; 63
 81c:	0f 92       	push	r0
 81e:	11 24       	eor	r1, r1
 820:	2f 93       	push	r18
 822:	3f 93       	push	r19
 824:	4f 93       	push	r20
 826:	5f 93       	push	r21
 828:	6f 93       	push	r22
 82a:	7f 93       	push	r23
 82c:	8f 93       	push	r24
 82e:	9f 93       	push	r25
 830:	af 93       	push	r26
 832:	bf 93       	push	r27
 834:	ef 93       	push	r30
 836:	ff 93       	push	r31
 838:	e0 91 eb 00 	lds	r30, 0x00EB	; 0x8000eb <GLB_PTRF_TIM1_ICU>
 83c:	f0 91 ec 00 	lds	r31, 0x00EC	; 0x8000ec <GLB_PTRF_TIM1_ICU+0x1>
 840:	09 95       	icall
 842:	ff 91       	pop	r31
 844:	ef 91       	pop	r30
 846:	bf 91       	pop	r27
 848:	af 91       	pop	r26
 84a:	9f 91       	pop	r25
 84c:	8f 91       	pop	r24
 84e:	7f 91       	pop	r23
 850:	6f 91       	pop	r22
 852:	5f 91       	pop	r21
 854:	4f 91       	pop	r20
 856:	3f 91       	pop	r19
 858:	2f 91       	pop	r18
 85a:	0f 90       	pop	r0
 85c:	0f be       	out	0x3f, r0	; 63
 85e:	0f 90       	pop	r0
 860:	1f 90       	pop	r1
 862:	18 95       	reti

00000864 <__vector_9>:
 864:	1f 92       	push	r1
 866:	0f 92       	push	r0
 868:	0f b6       	in	r0, 0x3f	; 63
 86a:	0f 92       	push	r0
 86c:	11 24       	eor	r1, r1
 86e:	2f 93       	push	r18
 870:	3f 93       	push	r19
 872:	4f 93       	push	r20
 874:	5f 93       	push	r21
 876:	6f 93       	push	r22
 878:	7f 93       	push	r23
 87a:	8f 93       	push	r24
 87c:	9f 93       	push	r25
 87e:	af 93       	push	r26
 880:	bf 93       	push	r27
 882:	ef 93       	push	r30
 884:	ff 93       	push	r31
 886:	e0 91 e9 00 	lds	r30, 0x00E9	; 0x8000e9 <GLB_PTRF_TIM1_OVF>
 88a:	f0 91 ea 00 	lds	r31, 0x00EA	; 0x8000ea <GLB_PTRF_TIM1_OVF+0x1>
 88e:	09 95       	icall
 890:	ff 91       	pop	r31
 892:	ef 91       	pop	r30
 894:	bf 91       	pop	r27
 896:	af 91       	pop	r26
 898:	9f 91       	pop	r25
 89a:	8f 91       	pop	r24
 89c:	7f 91       	pop	r23
 89e:	6f 91       	pop	r22
 8a0:	5f 91       	pop	r21
 8a2:	4f 91       	pop	r20
 8a4:	3f 91       	pop	r19
 8a6:	2f 91       	pop	r18
 8a8:	0f 90       	pop	r0
 8aa:	0f be       	out	0x3f, r0	; 63
 8ac:	0f 90       	pop	r0
 8ae:	1f 90       	pop	r1
 8b0:	18 95       	reti

000008b2 <UART_vInit>:
    {
        L_u8CharCount++;
        A_u8Data[L_u8CharCount] = UART_u8GetData();
    }
    A_u8Data[L_u8CharCount] = '\0';
}
 8b2:	83 e3       	ldi	r24, 0x33	; 51
 8b4:	89 b9       	out	0x09, r24	; 9
 8b6:	10 bc       	out	0x20, r1	; 32
 8b8:	80 b5       	in	r24, 0x20	; 32
 8ba:	8f 74       	andi	r24, 0x4F	; 79
 8bc:	80 68       	ori	r24, 0x80	; 128
 8be:	80 bd       	out	0x20, r24	; 32
 8c0:	80 b5       	in	r24, 0x20	; 32
 8c2:	87 77       	andi	r24, 0x77	; 119
 8c4:	80 68       	ori	r24, 0x80	; 128
 8c6:	80 bd       	out	0x20, r24	; 32
 8c8:	80 b5       	in	r24, 0x20	; 32
 8ca:	86 68       	ori	r24, 0x86	; 134
 8cc:	80 bd       	out	0x20, r24	; 32
 8ce:	52 98       	cbi	0x0a, 2	; 10
 8d0:	40 e0       	ldi	r20, 0x00	; 0
 8d2:	60 e0       	ldi	r22, 0x00	; 0
 8d4:	83 e0       	ldi	r24, 0x03	; 3
 8d6:	0e 94 9a 01 	call	0x334	; 0x334 <DIO_vSetPinDir>
 8da:	41 e0       	ldi	r20, 0x01	; 1
 8dc:	61 e0       	ldi	r22, 0x01	; 1
 8de:	83 e0       	ldi	r24, 0x03	; 3
 8e0:	0e 94 9a 01 	call	0x334	; 0x334 <DIO_vSetPinDir>
 8e4:	54 9a       	sbi	0x0a, 4	; 10
 8e6:	53 9a       	sbi	0x0a, 3	; 10
 8e8:	08 95       	ret

000008ea <UART_u8GetDataAsync>:
void UART_u8GetDataAsync(FUNC_PTR_Iu8_OV A_Fptr)
{
 8ea:	cf 93       	push	r28
 8ec:	df 93       	push	r29
 8ee:	ec 01       	movw	r28, r24
    /* GLobal Interrupt Enable */
    GIE_vSetGlobalInterrupt();
 8f0:	0e 94 80 02 	call	0x500	; 0x500 <GIE_vSetGlobalInterrupt>
    /* Enable RX interrupt */
    SET_BIT(UCSRB, RXCIE);
 8f4:	57 9a       	sbi	0x0a, 7	; 10
    /* Register CallBack Function */
    G_PTR_FUNC_RX = A_Fptr;
 8f6:	d0 93 ee 00 	sts	0x00EE, r29	; 0x8000ee <G_PTR_FUNC_RX+0x1>
 8fa:	c0 93 ed 00 	sts	0x00ED, r28	; 0x8000ed <G_PTR_FUNC_RX>
}
 8fe:	df 91       	pop	r29
 900:	cf 91       	pop	r28
 902:	08 95       	ret

00000904 <__vector_13>:
/* RX Complete Interrupt */
void __vector_13(void)
{
 904:	1f 92       	push	r1
 906:	0f 92       	push	r0
 908:	0f b6       	in	r0, 0x3f	; 63
 90a:	0f 92       	push	r0
 90c:	11 24       	eor	r1, r1
 90e:	2f 93       	push	r18
 910:	3f 93       	push	r19
 912:	4f 93       	push	r20
 914:	5f 93       	push	r21
 916:	6f 93       	push	r22
 918:	7f 93       	push	r23
 91a:	8f 93       	push	r24
 91c:	9f 93       	push	r25
 91e:	af 93       	push	r26
 920:	bf 93       	push	r27
 922:	ef 93       	push	r30
 924:	ff 93       	push	r31
    G_PTR_FUNC_RX(UDR);
 926:	8c b1       	in	r24, 0x0c	; 12
 928:	e0 91 ed 00 	lds	r30, 0x00ED	; 0x8000ed <G_PTR_FUNC_RX>
 92c:	f0 91 ee 00 	lds	r31, 0x00EE	; 0x8000ee <G_PTR_FUNC_RX+0x1>
 930:	09 95       	icall
}
 932:	ff 91       	pop	r31
 934:	ef 91       	pop	r30
 936:	bf 91       	pop	r27
 938:	af 91       	pop	r26
 93a:	9f 91       	pop	r25
 93c:	8f 91       	pop	r24
 93e:	7f 91       	pop	r23
 940:	6f 91       	pop	r22
 942:	5f 91       	pop	r21
 944:	4f 91       	pop	r20
 946:	3f 91       	pop	r19
 948:	2f 91       	pop	r18
 94a:	0f 90       	pop	r0
 94c:	0f be       	out	0x3f, r0	; 63
 94e:	0f 90       	pop	r0
 950:	1f 90       	pop	r1
 952:	18 95       	reti

00000954 <__vector_14>:
/* UDRE Data Register Empty */
void __vector_14(void)
{
 954:	1f 92       	push	r1
 956:	0f 92       	push	r0
 958:	0f b6       	in	r0, 0x3f	; 63
 95a:	0f 92       	push	r0
 95c:	11 24       	eor	r1, r1
 95e:	8f 93       	push	r24
    UDR = G_u8DataSend;
 960:	80 91 da 00 	lds	r24, 0x00DA	; 0x8000da <G_u8DataSend>
 964:	8c b9       	out	0x0c, r24	; 12
    // CLR_BIT(UCSRB, UDRIE);
}
 966:	8f 91       	pop	r24
 968:	0f 90       	pop	r0
 96a:	0f be       	out	0x3f, r0	; 63
 96c:	0f 90       	pop	r0
 96e:	1f 90       	pop	r1
 970:	18 95       	reti

00000972 <__vector_15>:
/* TX Complete Interrupt */
void __vector_15(void)
{
 972:	1f 92       	push	r1
 974:	0f 92       	push	r0
 976:	0f b6       	in	r0, 0x3f	; 63
 978:	0f 92       	push	r0
 97a:	11 24       	eor	r1, r1
}
 97c:	0f 90       	pop	r0
 97e:	0f be       	out	0x3f, r0	; 63
 980:	0f 90       	pop	r0
 982:	1f 90       	pop	r1
 984:	18 95       	reti

00000986 <__subsf3>:
 986:	50 58       	subi	r21, 0x80	; 128

00000988 <__addsf3>:
 988:	bb 27       	eor	r27, r27
 98a:	aa 27       	eor	r26, r26
 98c:	0e 94 db 04 	call	0x9b6	; 0x9b6 <__addsf3x>
 990:	0c 94 25 06 	jmp	0xc4a	; 0xc4a <__fp_round>
 994:	0e 94 17 06 	call	0xc2e	; 0xc2e <__fp_pscA>
 998:	38 f0       	brcs	.+14     	; 0x9a8 <__addsf3+0x20>
 99a:	0e 94 1e 06 	call	0xc3c	; 0xc3c <__fp_pscB>
 99e:	20 f0       	brcs	.+8      	; 0x9a8 <__addsf3+0x20>
 9a0:	39 f4       	brne	.+14     	; 0x9b0 <__addsf3+0x28>
 9a2:	9f 3f       	cpi	r25, 0xFF	; 255
 9a4:	19 f4       	brne	.+6      	; 0x9ac <__addsf3+0x24>
 9a6:	26 f4       	brtc	.+8      	; 0x9b0 <__addsf3+0x28>
 9a8:	0c 94 14 06 	jmp	0xc28	; 0xc28 <__fp_nan>
 9ac:	0e f4       	brtc	.+2      	; 0x9b0 <__addsf3+0x28>
 9ae:	e0 95       	com	r30
 9b0:	e7 fb       	bst	r30, 7
 9b2:	0c 94 0e 06 	jmp	0xc1c	; 0xc1c <__fp_inf>

000009b6 <__addsf3x>:
 9b6:	e9 2f       	mov	r30, r25
 9b8:	0e 94 36 06 	call	0xc6c	; 0xc6c <__fp_split3>
 9bc:	58 f3       	brcs	.-42     	; 0x994 <__addsf3+0xc>
 9be:	ba 17       	cp	r27, r26
 9c0:	62 07       	cpc	r22, r18
 9c2:	73 07       	cpc	r23, r19
 9c4:	84 07       	cpc	r24, r20
 9c6:	95 07       	cpc	r25, r21
 9c8:	20 f0       	brcs	.+8      	; 0x9d2 <__addsf3x+0x1c>
 9ca:	79 f4       	brne	.+30     	; 0x9ea <__addsf3x+0x34>
 9cc:	a6 f5       	brtc	.+104    	; 0xa36 <__addsf3x+0x80>
 9ce:	0c 94 58 06 	jmp	0xcb0	; 0xcb0 <__fp_zero>
 9d2:	0e f4       	brtc	.+2      	; 0x9d6 <__addsf3x+0x20>
 9d4:	e0 95       	com	r30
 9d6:	0b 2e       	mov	r0, r27
 9d8:	ba 2f       	mov	r27, r26
 9da:	a0 2d       	mov	r26, r0
 9dc:	0b 01       	movw	r0, r22
 9de:	b9 01       	movw	r22, r18
 9e0:	90 01       	movw	r18, r0
 9e2:	0c 01       	movw	r0, r24
 9e4:	ca 01       	movw	r24, r20
 9e6:	a0 01       	movw	r20, r0
 9e8:	11 24       	eor	r1, r1
 9ea:	ff 27       	eor	r31, r31
 9ec:	59 1b       	sub	r21, r25
 9ee:	99 f0       	breq	.+38     	; 0xa16 <__addsf3x+0x60>
 9f0:	59 3f       	cpi	r21, 0xF9	; 249
 9f2:	50 f4       	brcc	.+20     	; 0xa08 <__addsf3x+0x52>
 9f4:	50 3e       	cpi	r21, 0xE0	; 224
 9f6:	68 f1       	brcs	.+90     	; 0xa52 <__addsf3x+0x9c>
 9f8:	1a 16       	cp	r1, r26
 9fa:	f0 40       	sbci	r31, 0x00	; 0
 9fc:	a2 2f       	mov	r26, r18
 9fe:	23 2f       	mov	r18, r19
 a00:	34 2f       	mov	r19, r20
 a02:	44 27       	eor	r20, r20
 a04:	58 5f       	subi	r21, 0xF8	; 248
 a06:	f3 cf       	rjmp	.-26     	; 0x9ee <__addsf3x+0x38>
 a08:	46 95       	lsr	r20
 a0a:	37 95       	ror	r19
 a0c:	27 95       	ror	r18
 a0e:	a7 95       	ror	r26
 a10:	f0 40       	sbci	r31, 0x00	; 0
 a12:	53 95       	inc	r21
 a14:	c9 f7       	brne	.-14     	; 0xa08 <__addsf3x+0x52>
 a16:	7e f4       	brtc	.+30     	; 0xa36 <__addsf3x+0x80>
 a18:	1f 16       	cp	r1, r31
 a1a:	ba 0b       	sbc	r27, r26
 a1c:	62 0b       	sbc	r22, r18
 a1e:	73 0b       	sbc	r23, r19
 a20:	84 0b       	sbc	r24, r20
 a22:	ba f0       	brmi	.+46     	; 0xa52 <__addsf3x+0x9c>
 a24:	91 50       	subi	r25, 0x01	; 1
 a26:	a1 f0       	breq	.+40     	; 0xa50 <__addsf3x+0x9a>
 a28:	ff 0f       	add	r31, r31
 a2a:	bb 1f       	adc	r27, r27
 a2c:	66 1f       	adc	r22, r22
 a2e:	77 1f       	adc	r23, r23
 a30:	88 1f       	adc	r24, r24
 a32:	c2 f7       	brpl	.-16     	; 0xa24 <__addsf3x+0x6e>
 a34:	0e c0       	rjmp	.+28     	; 0xa52 <__addsf3x+0x9c>
 a36:	ba 0f       	add	r27, r26
 a38:	62 1f       	adc	r22, r18
 a3a:	73 1f       	adc	r23, r19
 a3c:	84 1f       	adc	r24, r20
 a3e:	48 f4       	brcc	.+18     	; 0xa52 <__addsf3x+0x9c>
 a40:	87 95       	ror	r24
 a42:	77 95       	ror	r23
 a44:	67 95       	ror	r22
 a46:	b7 95       	ror	r27
 a48:	f7 95       	ror	r31
 a4a:	9e 3f       	cpi	r25, 0xFE	; 254
 a4c:	08 f0       	brcs	.+2      	; 0xa50 <__addsf3x+0x9a>
 a4e:	b0 cf       	rjmp	.-160    	; 0x9b0 <__addsf3+0x28>
 a50:	93 95       	inc	r25
 a52:	88 0f       	add	r24, r24
 a54:	08 f0       	brcs	.+2      	; 0xa58 <__addsf3x+0xa2>
 a56:	99 27       	eor	r25, r25
 a58:	ee 0f       	add	r30, r30
 a5a:	97 95       	ror	r25
 a5c:	87 95       	ror	r24
 a5e:	08 95       	ret

00000a60 <__divsf3>:
 a60:	0e 94 44 05 	call	0xa88	; 0xa88 <__divsf3x>
 a64:	0c 94 25 06 	jmp	0xc4a	; 0xc4a <__fp_round>
 a68:	0e 94 1e 06 	call	0xc3c	; 0xc3c <__fp_pscB>
 a6c:	58 f0       	brcs	.+22     	; 0xa84 <__divsf3+0x24>
 a6e:	0e 94 17 06 	call	0xc2e	; 0xc2e <__fp_pscA>
 a72:	40 f0       	brcs	.+16     	; 0xa84 <__divsf3+0x24>
 a74:	29 f4       	brne	.+10     	; 0xa80 <__divsf3+0x20>
 a76:	5f 3f       	cpi	r21, 0xFF	; 255
 a78:	29 f0       	breq	.+10     	; 0xa84 <__divsf3+0x24>
 a7a:	0c 94 0e 06 	jmp	0xc1c	; 0xc1c <__fp_inf>
 a7e:	51 11       	cpse	r21, r1
 a80:	0c 94 59 06 	jmp	0xcb2	; 0xcb2 <__fp_szero>
 a84:	0c 94 14 06 	jmp	0xc28	; 0xc28 <__fp_nan>

00000a88 <__divsf3x>:
 a88:	0e 94 36 06 	call	0xc6c	; 0xc6c <__fp_split3>
 a8c:	68 f3       	brcs	.-38     	; 0xa68 <__divsf3+0x8>

00000a8e <__divsf3_pse>:
 a8e:	99 23       	and	r25, r25
 a90:	b1 f3       	breq	.-20     	; 0xa7e <__divsf3+0x1e>
 a92:	55 23       	and	r21, r21
 a94:	91 f3       	breq	.-28     	; 0xa7a <__divsf3+0x1a>
 a96:	95 1b       	sub	r25, r21
 a98:	55 0b       	sbc	r21, r21
 a9a:	bb 27       	eor	r27, r27
 a9c:	aa 27       	eor	r26, r26
 a9e:	62 17       	cp	r22, r18
 aa0:	73 07       	cpc	r23, r19
 aa2:	84 07       	cpc	r24, r20
 aa4:	38 f0       	brcs	.+14     	; 0xab4 <__divsf3_pse+0x26>
 aa6:	9f 5f       	subi	r25, 0xFF	; 255
 aa8:	5f 4f       	sbci	r21, 0xFF	; 255
 aaa:	22 0f       	add	r18, r18
 aac:	33 1f       	adc	r19, r19
 aae:	44 1f       	adc	r20, r20
 ab0:	aa 1f       	adc	r26, r26
 ab2:	a9 f3       	breq	.-22     	; 0xa9e <__divsf3_pse+0x10>
 ab4:	35 d0       	rcall	.+106    	; 0xb20 <__divsf3_pse+0x92>
 ab6:	0e 2e       	mov	r0, r30
 ab8:	3a f0       	brmi	.+14     	; 0xac8 <__divsf3_pse+0x3a>
 aba:	e0 e8       	ldi	r30, 0x80	; 128
 abc:	32 d0       	rcall	.+100    	; 0xb22 <__divsf3_pse+0x94>
 abe:	91 50       	subi	r25, 0x01	; 1
 ac0:	50 40       	sbci	r21, 0x00	; 0
 ac2:	e6 95       	lsr	r30
 ac4:	00 1c       	adc	r0, r0
 ac6:	ca f7       	brpl	.-14     	; 0xaba <__divsf3_pse+0x2c>
 ac8:	2b d0       	rcall	.+86     	; 0xb20 <__divsf3_pse+0x92>
 aca:	fe 2f       	mov	r31, r30
 acc:	29 d0       	rcall	.+82     	; 0xb20 <__divsf3_pse+0x92>
 ace:	66 0f       	add	r22, r22
 ad0:	77 1f       	adc	r23, r23
 ad2:	88 1f       	adc	r24, r24
 ad4:	bb 1f       	adc	r27, r27
 ad6:	26 17       	cp	r18, r22
 ad8:	37 07       	cpc	r19, r23
 ada:	48 07       	cpc	r20, r24
 adc:	ab 07       	cpc	r26, r27
 ade:	b0 e8       	ldi	r27, 0x80	; 128
 ae0:	09 f0       	breq	.+2      	; 0xae4 <__divsf3_pse+0x56>
 ae2:	bb 0b       	sbc	r27, r27
 ae4:	80 2d       	mov	r24, r0
 ae6:	bf 01       	movw	r22, r30
 ae8:	ff 27       	eor	r31, r31
 aea:	93 58       	subi	r25, 0x83	; 131
 aec:	5f 4f       	sbci	r21, 0xFF	; 255
 aee:	3a f0       	brmi	.+14     	; 0xafe <__divsf3_pse+0x70>
 af0:	9e 3f       	cpi	r25, 0xFE	; 254
 af2:	51 05       	cpc	r21, r1
 af4:	78 f0       	brcs	.+30     	; 0xb14 <__divsf3_pse+0x86>
 af6:	0c 94 0e 06 	jmp	0xc1c	; 0xc1c <__fp_inf>
 afa:	0c 94 59 06 	jmp	0xcb2	; 0xcb2 <__fp_szero>
 afe:	5f 3f       	cpi	r21, 0xFF	; 255
 b00:	e4 f3       	brlt	.-8      	; 0xafa <__divsf3_pse+0x6c>
 b02:	98 3e       	cpi	r25, 0xE8	; 232
 b04:	d4 f3       	brlt	.-12     	; 0xafa <__divsf3_pse+0x6c>
 b06:	86 95       	lsr	r24
 b08:	77 95       	ror	r23
 b0a:	67 95       	ror	r22
 b0c:	b7 95       	ror	r27
 b0e:	f7 95       	ror	r31
 b10:	9f 5f       	subi	r25, 0xFF	; 255
 b12:	c9 f7       	brne	.-14     	; 0xb06 <__divsf3_pse+0x78>
 b14:	88 0f       	add	r24, r24
 b16:	91 1d       	adc	r25, r1
 b18:	96 95       	lsr	r25
 b1a:	87 95       	ror	r24
 b1c:	97 f9       	bld	r25, 7
 b1e:	08 95       	ret
 b20:	e1 e0       	ldi	r30, 0x01	; 1
 b22:	66 0f       	add	r22, r22
 b24:	77 1f       	adc	r23, r23
 b26:	88 1f       	adc	r24, r24
 b28:	bb 1f       	adc	r27, r27
 b2a:	62 17       	cp	r22, r18
 b2c:	73 07       	cpc	r23, r19
 b2e:	84 07       	cpc	r24, r20
 b30:	ba 07       	cpc	r27, r26
 b32:	20 f0       	brcs	.+8      	; 0xb3c <__divsf3_pse+0xae>
 b34:	62 1b       	sub	r22, r18
 b36:	73 0b       	sbc	r23, r19
 b38:	84 0b       	sbc	r24, r20
 b3a:	ba 0b       	sbc	r27, r26
 b3c:	ee 1f       	adc	r30, r30
 b3e:	88 f7       	brcc	.-30     	; 0xb22 <__divsf3_pse+0x94>
 b40:	e0 95       	com	r30
 b42:	08 95       	ret

00000b44 <__fixunssfsi>:
 b44:	0e 94 3e 06 	call	0xc7c	; 0xc7c <__fp_splitA>
 b48:	88 f0       	brcs	.+34     	; 0xb6c <__fixunssfsi+0x28>
 b4a:	9f 57       	subi	r25, 0x7F	; 127
 b4c:	98 f0       	brcs	.+38     	; 0xb74 <__fixunssfsi+0x30>
 b4e:	b9 2f       	mov	r27, r25
 b50:	99 27       	eor	r25, r25
 b52:	b7 51       	subi	r27, 0x17	; 23
 b54:	b0 f0       	brcs	.+44     	; 0xb82 <__fixunssfsi+0x3e>
 b56:	e1 f0       	breq	.+56     	; 0xb90 <__fixunssfsi+0x4c>
 b58:	66 0f       	add	r22, r22
 b5a:	77 1f       	adc	r23, r23
 b5c:	88 1f       	adc	r24, r24
 b5e:	99 1f       	adc	r25, r25
 b60:	1a f0       	brmi	.+6      	; 0xb68 <__fixunssfsi+0x24>
 b62:	ba 95       	dec	r27
 b64:	c9 f7       	brne	.-14     	; 0xb58 <__fixunssfsi+0x14>
 b66:	14 c0       	rjmp	.+40     	; 0xb90 <__fixunssfsi+0x4c>
 b68:	b1 30       	cpi	r27, 0x01	; 1
 b6a:	91 f0       	breq	.+36     	; 0xb90 <__fixunssfsi+0x4c>
 b6c:	0e 94 58 06 	call	0xcb0	; 0xcb0 <__fp_zero>
 b70:	b1 e0       	ldi	r27, 0x01	; 1
 b72:	08 95       	ret
 b74:	0c 94 58 06 	jmp	0xcb0	; 0xcb0 <__fp_zero>
 b78:	67 2f       	mov	r22, r23
 b7a:	78 2f       	mov	r23, r24
 b7c:	88 27       	eor	r24, r24
 b7e:	b8 5f       	subi	r27, 0xF8	; 248
 b80:	39 f0       	breq	.+14     	; 0xb90 <__fixunssfsi+0x4c>
 b82:	b9 3f       	cpi	r27, 0xF9	; 249
 b84:	cc f3       	brlt	.-14     	; 0xb78 <__fixunssfsi+0x34>
 b86:	86 95       	lsr	r24
 b88:	77 95       	ror	r23
 b8a:	67 95       	ror	r22
 b8c:	b3 95       	inc	r27
 b8e:	d9 f7       	brne	.-10     	; 0xb86 <__fixunssfsi+0x42>
 b90:	3e f4       	brtc	.+14     	; 0xba0 <__fixunssfsi+0x5c>
 b92:	90 95       	com	r25
 b94:	80 95       	com	r24
 b96:	70 95       	com	r23
 b98:	61 95       	neg	r22
 b9a:	7f 4f       	sbci	r23, 0xFF	; 255
 b9c:	8f 4f       	sbci	r24, 0xFF	; 255
 b9e:	9f 4f       	sbci	r25, 0xFF	; 255
 ba0:	08 95       	ret

00000ba2 <__floatunsisf>:
 ba2:	e8 94       	clt
 ba4:	09 c0       	rjmp	.+18     	; 0xbb8 <__floatsisf+0x12>

00000ba6 <__floatsisf>:
 ba6:	97 fb       	bst	r25, 7
 ba8:	3e f4       	brtc	.+14     	; 0xbb8 <__floatsisf+0x12>
 baa:	90 95       	com	r25
 bac:	80 95       	com	r24
 bae:	70 95       	com	r23
 bb0:	61 95       	neg	r22
 bb2:	7f 4f       	sbci	r23, 0xFF	; 255
 bb4:	8f 4f       	sbci	r24, 0xFF	; 255
 bb6:	9f 4f       	sbci	r25, 0xFF	; 255
 bb8:	99 23       	and	r25, r25
 bba:	a9 f0       	breq	.+42     	; 0xbe6 <__floatsisf+0x40>
 bbc:	f9 2f       	mov	r31, r25
 bbe:	96 e9       	ldi	r25, 0x96	; 150
 bc0:	bb 27       	eor	r27, r27
 bc2:	93 95       	inc	r25
 bc4:	f6 95       	lsr	r31
 bc6:	87 95       	ror	r24
 bc8:	77 95       	ror	r23
 bca:	67 95       	ror	r22
 bcc:	b7 95       	ror	r27
 bce:	f1 11       	cpse	r31, r1
 bd0:	f8 cf       	rjmp	.-16     	; 0xbc2 <__floatsisf+0x1c>
 bd2:	fa f4       	brpl	.+62     	; 0xc12 <__floatsisf+0x6c>
 bd4:	bb 0f       	add	r27, r27
 bd6:	11 f4       	brne	.+4      	; 0xbdc <__floatsisf+0x36>
 bd8:	60 ff       	sbrs	r22, 0
 bda:	1b c0       	rjmp	.+54     	; 0xc12 <__floatsisf+0x6c>
 bdc:	6f 5f       	subi	r22, 0xFF	; 255
 bde:	7f 4f       	sbci	r23, 0xFF	; 255
 be0:	8f 4f       	sbci	r24, 0xFF	; 255
 be2:	9f 4f       	sbci	r25, 0xFF	; 255
 be4:	16 c0       	rjmp	.+44     	; 0xc12 <__floatsisf+0x6c>
 be6:	88 23       	and	r24, r24
 be8:	11 f0       	breq	.+4      	; 0xbee <__floatsisf+0x48>
 bea:	96 e9       	ldi	r25, 0x96	; 150
 bec:	11 c0       	rjmp	.+34     	; 0xc10 <__floatsisf+0x6a>
 bee:	77 23       	and	r23, r23
 bf0:	21 f0       	breq	.+8      	; 0xbfa <__floatsisf+0x54>
 bf2:	9e e8       	ldi	r25, 0x8E	; 142
 bf4:	87 2f       	mov	r24, r23
 bf6:	76 2f       	mov	r23, r22
 bf8:	05 c0       	rjmp	.+10     	; 0xc04 <__floatsisf+0x5e>
 bfa:	66 23       	and	r22, r22
 bfc:	71 f0       	breq	.+28     	; 0xc1a <__floatsisf+0x74>
 bfe:	96 e8       	ldi	r25, 0x86	; 134
 c00:	86 2f       	mov	r24, r22
 c02:	70 e0       	ldi	r23, 0x00	; 0
 c04:	60 e0       	ldi	r22, 0x00	; 0
 c06:	2a f0       	brmi	.+10     	; 0xc12 <__floatsisf+0x6c>
 c08:	9a 95       	dec	r25
 c0a:	66 0f       	add	r22, r22
 c0c:	77 1f       	adc	r23, r23
 c0e:	88 1f       	adc	r24, r24
 c10:	da f7       	brpl	.-10     	; 0xc08 <__floatsisf+0x62>
 c12:	88 0f       	add	r24, r24
 c14:	96 95       	lsr	r25
 c16:	87 95       	ror	r24
 c18:	97 f9       	bld	r25, 7
 c1a:	08 95       	ret

00000c1c <__fp_inf>:
 c1c:	97 f9       	bld	r25, 7
 c1e:	9f 67       	ori	r25, 0x7F	; 127
 c20:	80 e8       	ldi	r24, 0x80	; 128
 c22:	70 e0       	ldi	r23, 0x00	; 0
 c24:	60 e0       	ldi	r22, 0x00	; 0
 c26:	08 95       	ret

00000c28 <__fp_nan>:
 c28:	9f ef       	ldi	r25, 0xFF	; 255
 c2a:	80 ec       	ldi	r24, 0xC0	; 192
 c2c:	08 95       	ret

00000c2e <__fp_pscA>:
 c2e:	00 24       	eor	r0, r0
 c30:	0a 94       	dec	r0
 c32:	16 16       	cp	r1, r22
 c34:	17 06       	cpc	r1, r23
 c36:	18 06       	cpc	r1, r24
 c38:	09 06       	cpc	r0, r25
 c3a:	08 95       	ret

00000c3c <__fp_pscB>:
 c3c:	00 24       	eor	r0, r0
 c3e:	0a 94       	dec	r0
 c40:	12 16       	cp	r1, r18
 c42:	13 06       	cpc	r1, r19
 c44:	14 06       	cpc	r1, r20
 c46:	05 06       	cpc	r0, r21
 c48:	08 95       	ret

00000c4a <__fp_round>:
 c4a:	09 2e       	mov	r0, r25
 c4c:	03 94       	inc	r0
 c4e:	00 0c       	add	r0, r0
 c50:	11 f4       	brne	.+4      	; 0xc56 <__fp_round+0xc>
 c52:	88 23       	and	r24, r24
 c54:	52 f0       	brmi	.+20     	; 0xc6a <__fp_round+0x20>
 c56:	bb 0f       	add	r27, r27
 c58:	40 f4       	brcc	.+16     	; 0xc6a <__fp_round+0x20>
 c5a:	bf 2b       	or	r27, r31
 c5c:	11 f4       	brne	.+4      	; 0xc62 <__fp_round+0x18>
 c5e:	60 ff       	sbrs	r22, 0
 c60:	04 c0       	rjmp	.+8      	; 0xc6a <__fp_round+0x20>
 c62:	6f 5f       	subi	r22, 0xFF	; 255
 c64:	7f 4f       	sbci	r23, 0xFF	; 255
 c66:	8f 4f       	sbci	r24, 0xFF	; 255
 c68:	9f 4f       	sbci	r25, 0xFF	; 255
 c6a:	08 95       	ret

00000c6c <__fp_split3>:
 c6c:	57 fd       	sbrc	r21, 7
 c6e:	90 58       	subi	r25, 0x80	; 128
 c70:	44 0f       	add	r20, r20
 c72:	55 1f       	adc	r21, r21
 c74:	59 f0       	breq	.+22     	; 0xc8c <__fp_splitA+0x10>
 c76:	5f 3f       	cpi	r21, 0xFF	; 255
 c78:	71 f0       	breq	.+28     	; 0xc96 <__fp_splitA+0x1a>
 c7a:	47 95       	ror	r20

00000c7c <__fp_splitA>:
 c7c:	88 0f       	add	r24, r24
 c7e:	97 fb       	bst	r25, 7
 c80:	99 1f       	adc	r25, r25
 c82:	61 f0       	breq	.+24     	; 0xc9c <__fp_splitA+0x20>
 c84:	9f 3f       	cpi	r25, 0xFF	; 255
 c86:	79 f0       	breq	.+30     	; 0xca6 <__fp_splitA+0x2a>
 c88:	87 95       	ror	r24
 c8a:	08 95       	ret
 c8c:	12 16       	cp	r1, r18
 c8e:	13 06       	cpc	r1, r19
 c90:	14 06       	cpc	r1, r20
 c92:	55 1f       	adc	r21, r21
 c94:	f2 cf       	rjmp	.-28     	; 0xc7a <__fp_split3+0xe>
 c96:	46 95       	lsr	r20
 c98:	f1 df       	rcall	.-30     	; 0xc7c <__fp_splitA>
 c9a:	08 c0       	rjmp	.+16     	; 0xcac <__fp_splitA+0x30>
 c9c:	16 16       	cp	r1, r22
 c9e:	17 06       	cpc	r1, r23
 ca0:	18 06       	cpc	r1, r24
 ca2:	99 1f       	adc	r25, r25
 ca4:	f1 cf       	rjmp	.-30     	; 0xc88 <__fp_splitA+0xc>
 ca6:	86 95       	lsr	r24
 ca8:	71 05       	cpc	r23, r1
 caa:	61 05       	cpc	r22, r1
 cac:	08 94       	sec
 cae:	08 95       	ret

00000cb0 <__fp_zero>:
 cb0:	e8 94       	clt

00000cb2 <__fp_szero>:
 cb2:	bb 27       	eor	r27, r27
 cb4:	66 27       	eor	r22, r22
 cb6:	77 27       	eor	r23, r23
 cb8:	cb 01       	movw	r24, r22
 cba:	97 f9       	bld	r25, 7
 cbc:	08 95       	ret

00000cbe <__mulsf3>:
 cbe:	0e 94 72 06 	call	0xce4	; 0xce4 <__mulsf3x>
 cc2:	0c 94 25 06 	jmp	0xc4a	; 0xc4a <__fp_round>
 cc6:	0e 94 17 06 	call	0xc2e	; 0xc2e <__fp_pscA>
 cca:	38 f0       	brcs	.+14     	; 0xcda <__mulsf3+0x1c>
 ccc:	0e 94 1e 06 	call	0xc3c	; 0xc3c <__fp_pscB>
 cd0:	20 f0       	brcs	.+8      	; 0xcda <__mulsf3+0x1c>
 cd2:	95 23       	and	r25, r21
 cd4:	11 f0       	breq	.+4      	; 0xcda <__mulsf3+0x1c>
 cd6:	0c 94 0e 06 	jmp	0xc1c	; 0xc1c <__fp_inf>
 cda:	0c 94 14 06 	jmp	0xc28	; 0xc28 <__fp_nan>
 cde:	11 24       	eor	r1, r1
 ce0:	0c 94 59 06 	jmp	0xcb2	; 0xcb2 <__fp_szero>

00000ce4 <__mulsf3x>:
 ce4:	0e 94 36 06 	call	0xc6c	; 0xc6c <__fp_split3>
 ce8:	70 f3       	brcs	.-36     	; 0xcc6 <__mulsf3+0x8>

00000cea <__mulsf3_pse>:
 cea:	95 9f       	mul	r25, r21
 cec:	c1 f3       	breq	.-16     	; 0xcde <__mulsf3+0x20>
 cee:	95 0f       	add	r25, r21
 cf0:	50 e0       	ldi	r21, 0x00	; 0
 cf2:	55 1f       	adc	r21, r21
 cf4:	62 9f       	mul	r22, r18
 cf6:	f0 01       	movw	r30, r0
 cf8:	72 9f       	mul	r23, r18
 cfa:	bb 27       	eor	r27, r27
 cfc:	f0 0d       	add	r31, r0
 cfe:	b1 1d       	adc	r27, r1
 d00:	63 9f       	mul	r22, r19
 d02:	aa 27       	eor	r26, r26
 d04:	f0 0d       	add	r31, r0
 d06:	b1 1d       	adc	r27, r1
 d08:	aa 1f       	adc	r26, r26
 d0a:	64 9f       	mul	r22, r20
 d0c:	66 27       	eor	r22, r22
 d0e:	b0 0d       	add	r27, r0
 d10:	a1 1d       	adc	r26, r1
 d12:	66 1f       	adc	r22, r22
 d14:	82 9f       	mul	r24, r18
 d16:	22 27       	eor	r18, r18
 d18:	b0 0d       	add	r27, r0
 d1a:	a1 1d       	adc	r26, r1
 d1c:	62 1f       	adc	r22, r18
 d1e:	73 9f       	mul	r23, r19
 d20:	b0 0d       	add	r27, r0
 d22:	a1 1d       	adc	r26, r1
 d24:	62 1f       	adc	r22, r18
 d26:	83 9f       	mul	r24, r19
 d28:	a0 0d       	add	r26, r0
 d2a:	61 1d       	adc	r22, r1
 d2c:	22 1f       	adc	r18, r18
 d2e:	74 9f       	mul	r23, r20
 d30:	33 27       	eor	r19, r19
 d32:	a0 0d       	add	r26, r0
 d34:	61 1d       	adc	r22, r1
 d36:	23 1f       	adc	r18, r19
 d38:	84 9f       	mul	r24, r20
 d3a:	60 0d       	add	r22, r0
 d3c:	21 1d       	adc	r18, r1
 d3e:	82 2f       	mov	r24, r18
 d40:	76 2f       	mov	r23, r22
 d42:	6a 2f       	mov	r22, r26
 d44:	11 24       	eor	r1, r1
 d46:	9f 57       	subi	r25, 0x7F	; 127
 d48:	50 40       	sbci	r21, 0x00	; 0
 d4a:	9a f0       	brmi	.+38     	; 0xd72 <__mulsf3_pse+0x88>
 d4c:	f1 f0       	breq	.+60     	; 0xd8a <__mulsf3_pse+0xa0>
 d4e:	88 23       	and	r24, r24
 d50:	4a f0       	brmi	.+18     	; 0xd64 <__mulsf3_pse+0x7a>
 d52:	ee 0f       	add	r30, r30
 d54:	ff 1f       	adc	r31, r31
 d56:	bb 1f       	adc	r27, r27
 d58:	66 1f       	adc	r22, r22
 d5a:	77 1f       	adc	r23, r23
 d5c:	88 1f       	adc	r24, r24
 d5e:	91 50       	subi	r25, 0x01	; 1
 d60:	50 40       	sbci	r21, 0x00	; 0
 d62:	a9 f7       	brne	.-22     	; 0xd4e <__mulsf3_pse+0x64>
 d64:	9e 3f       	cpi	r25, 0xFE	; 254
 d66:	51 05       	cpc	r21, r1
 d68:	80 f0       	brcs	.+32     	; 0xd8a <__mulsf3_pse+0xa0>
 d6a:	0c 94 0e 06 	jmp	0xc1c	; 0xc1c <__fp_inf>
 d6e:	0c 94 59 06 	jmp	0xcb2	; 0xcb2 <__fp_szero>
 d72:	5f 3f       	cpi	r21, 0xFF	; 255
 d74:	e4 f3       	brlt	.-8      	; 0xd6e <__mulsf3_pse+0x84>
 d76:	98 3e       	cpi	r25, 0xE8	; 232
 d78:	d4 f3       	brlt	.-12     	; 0xd6e <__mulsf3_pse+0x84>
 d7a:	86 95       	lsr	r24
 d7c:	77 95       	ror	r23
 d7e:	67 95       	ror	r22
 d80:	b7 95       	ror	r27
 d82:	f7 95       	ror	r31
 d84:	e7 95       	ror	r30
 d86:	9f 5f       	subi	r25, 0xFF	; 255
 d88:	c1 f7       	brne	.-16     	; 0xd7a <__mulsf3_pse+0x90>
 d8a:	fe 2b       	or	r31, r30
 d8c:	88 0f       	add	r24, r24
 d8e:	91 1d       	adc	r25, r1
 d90:	96 95       	lsr	r25
 d92:	87 95       	ror	r24
 d94:	97 f9       	bld	r25, 7
 d96:	08 95       	ret

00000d98 <__divmodhi4>:
 d98:	97 fb       	bst	r25, 7
 d9a:	07 2e       	mov	r0, r23
 d9c:	16 f4       	brtc	.+4      	; 0xda2 <__divmodhi4+0xa>
 d9e:	00 94       	com	r0
 da0:	07 d0       	rcall	.+14     	; 0xdb0 <__divmodhi4_neg1>
 da2:	77 fd       	sbrc	r23, 7
 da4:	09 d0       	rcall	.+18     	; 0xdb8 <__divmodhi4_neg2>
 da6:	0e 94 e0 06 	call	0xdc0	; 0xdc0 <__udivmodhi4>
 daa:	07 fc       	sbrc	r0, 7
 dac:	05 d0       	rcall	.+10     	; 0xdb8 <__divmodhi4_neg2>
 dae:	3e f4       	brtc	.+14     	; 0xdbe <__divmodhi4_exit>

00000db0 <__divmodhi4_neg1>:
 db0:	90 95       	com	r25
 db2:	81 95       	neg	r24
 db4:	9f 4f       	sbci	r25, 0xFF	; 255
 db6:	08 95       	ret

00000db8 <__divmodhi4_neg2>:
 db8:	70 95       	com	r23
 dba:	61 95       	neg	r22
 dbc:	7f 4f       	sbci	r23, 0xFF	; 255

00000dbe <__divmodhi4_exit>:
 dbe:	08 95       	ret

00000dc0 <__udivmodhi4>:
 dc0:	aa 1b       	sub	r26, r26
 dc2:	bb 1b       	sub	r27, r27
 dc4:	51 e1       	ldi	r21, 0x11	; 17
 dc6:	07 c0       	rjmp	.+14     	; 0xdd6 <__udivmodhi4_ep>

00000dc8 <__udivmodhi4_loop>:
 dc8:	aa 1f       	adc	r26, r26
 dca:	bb 1f       	adc	r27, r27
 dcc:	a6 17       	cp	r26, r22
 dce:	b7 07       	cpc	r27, r23
 dd0:	10 f0       	brcs	.+4      	; 0xdd6 <__udivmodhi4_ep>
 dd2:	a6 1b       	sub	r26, r22
 dd4:	b7 0b       	sbc	r27, r23

00000dd6 <__udivmodhi4_ep>:
 dd6:	88 1f       	adc	r24, r24
 dd8:	99 1f       	adc	r25, r25
 dda:	5a 95       	dec	r21
 ddc:	a9 f7       	brne	.-22     	; 0xdc8 <__udivmodhi4_loop>
 dde:	80 95       	com	r24
 de0:	90 95       	com	r25
 de2:	bc 01       	movw	r22, r24
 de4:	cd 01       	movw	r24, r26
 de6:	08 95       	ret

00000de8 <_exit>:
 de8:	f8 94       	cli

00000dea <__stop_program>:
 dea:	ff cf       	rjmp	.-2      	; 0xdea <__stop_program>
